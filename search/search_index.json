{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to PYCO Documentation \u00b6 This is the online documentation for PYCO Apps Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-pyco-documentation","text":"This is the online documentation for PYCO Apps","title":"Welcome to PYCO Documentation"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/","text":"ABOUT \u00b6 PYCO (PYthon Creation Optimizer) are a collection of apps & script created to improve artists workflow. The tools are based on the Python langage with graphical interface realised mostly with the PySide2 librairy","title":"About"},{"location":"about/#about","text":"PYCO (PYthon Creation Optimizer) are a collection of apps & script created to improve artists workflow. The tools are based on the Python langage with graphical interface realised mostly with the PySide2 librairy","title":"ABOUT"},{"location":"maya/m_udimselect_start/","text":"GETTING STARTED \u00b6 Blank","title":"Udim Select"},{"location":"maya/m_udimselect_start/#getting-started","text":"Blank","title":"GETTING STARTED"},{"location":"standalone/cs_features/","text":"Inputs and Outputs \u00b6 Formats List of Inputs formats supported .exr .png .jpg .jpeg .tiff .hdr List of Output formats supported Format Bitdepth .exr 16 Half, 32 Float .jpg 8 Int .png 8 Int, 16 Int What is the behavior of the export checkable circles ? Export in a new folder: The file will be placed in a new folder named \"ACEScg\" located at the same location of the original file. Export at the same location: a new file prefixed with the target colorspace or the ODT/Tf will be created. Danger All outputs are cropped to RGBA (if alpha supported) channels. So if you input multi-channel exrs and output exrs, you will lose all your other channels. ODT/Transfer Functions \u00b6 Availability The ODT / Transfer Function dropdown is only available when the Output format is set to a integer format (.jpg or .png) ACES ODT ( prefixed with (ACES) ) are only available when the Target ColorSpace is set to ACEScg","title":"Functionalities"},{"location":"standalone/cs_features/#inputs-and-outputs","text":"Formats List of Inputs formats supported .exr .png .jpg .jpeg .tiff .hdr List of Output formats supported Format Bitdepth .exr 16 Half, 32 Float .jpg 8 Int .png 8 Int, 16 Int What is the behavior of the export checkable circles ? Export in a new folder: The file will be placed in a new folder named \"ACEScg\" located at the same location of the original file. Export at the same location: a new file prefixed with the target colorspace or the ODT/Tf will be created. Danger All outputs are cropped to RGBA (if alpha supported) channels. So if you input multi-channel exrs and output exrs, you will lose all your other channels.","title":"Inputs and Outputs"},{"location":"standalone/cs_features/#odttransfer-functions","text":"Availability The ODT / Transfer Function dropdown is only available when the Output format is set to a integer format (.jpg or .png) ACES ODT ( prefixed with (ACES) ) are only available when the Target ColorSpace is set to ACEScg","title":"ODT/Transfer Functions"},{"location":"standalone/cs_index/","text":"PYCO Image Colorspace Converter \u00b6 About \u00b6 This tool target an utilisation in the vfx/animation domain by providing options for converting input image into a desired colorspace with different export options such as the format, bitdepth, and such... The app only works with 2d images for now.","title":"Home"},{"location":"standalone/cs_index/#pyco-image-colorspace-converter","text":"","title":"PYCO Image Colorspace Converter"},{"location":"standalone/cs_index/#about","text":"This tool target an utilisation in the vfx/animation domain by providing options for converting input image into a desired colorspace with different export options such as the format, bitdepth, and such... The app only works with 2d images for now.","title":"About"},{"location":"standalone/cs_start/","text":"GETTING STARTED \u00b6 Installation \u00b6 Pyco Colorspace can be downloaded here: 1. Import files \u00b6 You can simply drag & drop any supported file(s) or even just a folder. You can also click on the folder icon to open files through your os explorer. Warning When d&d a folder all the file inside it and its sub-directories will be added ! 2. Set the IDT \u00b6 The IDT (Input display Transform) specify the input file colorspace primaries and transfer-function. Example For example sRGB-Texture specify that the file has sRGB primaries with the sRGB EOTF transfer function while sRGB-Linear specify that the transfer function is Linear To apply an IDT to the desired files: Select one or multiple file in the list (shift+click & such) Select the desired IDT in the dropdown menu. Click on Apply to Selection / Apply to All (No selection is needed for this one) Tip You can also click & drag down/up to select multiple files quickly in the list. 3. Change Outputs options \u00b6 3.1 Select the colorspace to convert file primaries to in the drop down at the top. \u00b6 Tip If the IDT and Target Colorspace are the same no conversion will happens (and no linearisation too). 3.2 Select your output format: \u00b6 exr The superior file format for anything that is not to be directly previewed on Internet. For Textures, hdris, ... everything that is going to be used in your DCC jpg, png Only for thumbnails, quick previews, ... You need to apply a Transfer-function / ODT. 3.3 Select your bitdepth (output format dependent) \u00b6 Warning When converting hdris it is recommended to output a 32bit Float file to not clip any value 3.4 Pick your compression method (exr only) \u00b6 Zip: Non Destructive compression Zips: Same but can be write/read faster in some softwares Dwaa: Destructive compression (not eye visible) but produce very light files 3.5 Set the compression amount (output format & compression method dependent) \u00b6 jpg: 100 = Max Quality ; 0 = Minimum quality but light files exr(dwaa/dwaab): 0 means Max quality 3.6 Select your output location option. \u00b6 Refer to the Functionalities page. 4. Start The Conversion \u00b6 Click on the green play button in the toolbar to start converting. When a file is converted it will be removed from the list. If you click on Abort, the currently converted file will still be converted. Some Examples \u00b6 Example 01 Importing a 3d render in .exr rendered with ACEScg primaries and applying an ODT for sharing on Internet: IDT : ACEScg ; TargetColorSpace : ACEScg ; Output format : .jpg ; Compression : 100 (max quality) ; ODT : sRGB(ACES) Example 02 Importing a albedo texture in .exr from Megascans (sRGB primaries) and convert it to ACEScg IDT : sRGB-Linear ; TargetColorSpace : ACEScg ; Output format : .exr; BitDepth : 16b Float; Compression : zip;","title":"Getting started"},{"location":"standalone/cs_start/#getting-started","text":"","title":"GETTING STARTED"},{"location":"standalone/cs_start/#installation","text":"Pyco Colorspace can be downloaded here:","title":"Installation"},{"location":"standalone/cs_start/#1-import-files","text":"You can simply drag & drop any supported file(s) or even just a folder. You can also click on the folder icon to open files through your os explorer. Warning When d&d a folder all the file inside it and its sub-directories will be added !","title":"1. Import files"},{"location":"standalone/cs_start/#2-set-the-idt","text":"The IDT (Input display Transform) specify the input file colorspace primaries and transfer-function. Example For example sRGB-Texture specify that the file has sRGB primaries with the sRGB EOTF transfer function while sRGB-Linear specify that the transfer function is Linear To apply an IDT to the desired files: Select one or multiple file in the list (shift+click & such) Select the desired IDT in the dropdown menu. Click on Apply to Selection / Apply to All (No selection is needed for this one) Tip You can also click & drag down/up to select multiple files quickly in the list.","title":"2. Set the IDT"},{"location":"standalone/cs_start/#3-change-outputs-options","text":"","title":"3. Change Outputs options"},{"location":"standalone/cs_start/#31-select-the-colorspace-to-convert-file-primaries-to-in-the-drop-down-at-the-top","text":"Tip If the IDT and Target Colorspace are the same no conversion will happens (and no linearisation too).","title":"3.1 Select the colorspace to convert file primaries to in the drop down at the top."},{"location":"standalone/cs_start/#32-select-your-output-format","text":"exr The superior file format for anything that is not to be directly previewed on Internet. For Textures, hdris, ... everything that is going to be used in your DCC jpg, png Only for thumbnails, quick previews, ... You need to apply a Transfer-function / ODT.","title":"3.2 Select your output format:"},{"location":"standalone/cs_start/#33-select-your-bitdepth-output-format-dependent","text":"Warning When converting hdris it is recommended to output a 32bit Float file to not clip any value","title":"3.3 Select your bitdepth (output format dependent)"},{"location":"standalone/cs_start/#34-pick-your-compression-method-exr-only","text":"Zip: Non Destructive compression Zips: Same but can be write/read faster in some softwares Dwaa: Destructive compression (not eye visible) but produce very light files","title":"3.4  Pick your compression method (exr only)"},{"location":"standalone/cs_start/#35-set-the-compression-amount-output-format-compression-method-dependent","text":"jpg: 100 = Max Quality ; 0 = Minimum quality but light files exr(dwaa/dwaab): 0 means Max quality","title":"3.5 Set the compression amount (output format &amp; compression method dependent)"},{"location":"standalone/cs_start/#36-select-your-output-location-option","text":"Refer to the Functionalities page.","title":"3.6 Select your output location option."},{"location":"standalone/cs_start/#4-start-the-conversion","text":"Click on the green play button in the toolbar to start converting. When a file is converted it will be removed from the list. If you click on Abort, the currently converted file will still be converted.","title":"4. Start The Conversion"},{"location":"standalone/cs_start/#some-examples","text":"Example 01 Importing a 3d render in .exr rendered with ACEScg primaries and applying an ODT for sharing on Internet: IDT : ACEScg ; TargetColorSpace : ACEScg ; Output format : .jpg ; Compression : 100 (max quality) ; ODT : sRGB(ACES) Example 02 Importing a albedo texture in .exr from Megascans (sRGB primaries) and convert it to ACEScg IDT : sRGB-Linear ; TargetColorSpace : ACEScg ; Output format : .exr; BitDepth : 16b Float; Compression : zip;","title":"Some Examples"}]}