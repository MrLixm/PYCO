{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to PYCO Documentation \u00b6 This is the online documentation for all PYCO Apps","title":"Home"},{"location":"#welcome-to-pyco-documentation","text":"This is the online documentation for all PYCO Apps","title":" Welcome to PYCO Documentation"},{"location":"about/","text":"ABOUT \u00b6 PYCO (PYthon Creation Optimizer) are a collection of apps & scripts created to improve artists workflow. The tools are based on the Python language with graphical interfaces realised mostly with the PySide2 library. Developed by Liam Collod (MrLixm) You can download the app on Gumroad: https://gumroad.com/liam_collod","title":"About"},{"location":"about/#about","text":"PYCO (PYthon Creation Optimizer) are a collection of apps & scripts created to improve artists workflow. The tools are based on the Python language with graphical interfaces realised mostly with the PySide2 library. Developed by Liam Collod (MrLixm) You can download the app on Gumroad: https://gumroad.com/liam_collod","title":" ABOUT"},{"location":"maya/udimselect/","text":"UDIM SELECT \u00b6 Simplify the task of selecting UDIMS, especially for large scenes in Maya. Get the app Download the script here: https://gumroad.com/liam_collod#AuTpL [WIP]","title":"Udim Select"},{"location":"maya/udimselect/#udim-select","text":"Simplify the task of selecting UDIMS, especially for large scenes in Maya. Get the app Download the script here: https://gumroad.com/liam_collod#AuTpL [WIP]","title":"UDIM SELECT"},{"location":"standalone/ColorspaceConvert/development/","text":"Development \u00b6 Public Github repository: https://github.com/MrLixm/Colorspace_Converter Master: Public realeased branch. Develop: Active development branch. Creating the project \u00b6 Python version 3.6.8 \u00b6 VirtualEnvironment: $ pip install PySide2 == 5.13 . 1 $ pip install colour - science == 0.3 . 15 $ pip install 'colour-science[optional]' $ pip install fbs == 0.8 . 6 $ pip install \"..\\oiio-2.0.5-cp36-none-win_amd64.whl\" The oiio Python wheel can be downloaded here: https://github.com/fredrikaverpil/oiio-python/releases Install Windows 10 SDK \u00b6 https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk/ Fix Scipy lib not found Issue: \u00b6 (On windows at least) Scipy cause problem when freezing, to fix: Go to the package location: venvColour\\Lib\\site-packages\\scipy Create a new folder /extra-dll Copy the content of /.libs in /extra-dll Shared under CC BY-SA 4.0 license. BY \u2013 Credit must be given to the creator SA \u2013 Adaptations must be shared under the same terms https://creativecommons.org/licenses/by-sa/4.0/","title":"Development"},{"location":"standalone/ColorspaceConvert/development/#development","text":"Public Github repository: https://github.com/MrLixm/Colorspace_Converter Master: Public realeased branch. Develop: Active development branch.","title":" Development"},{"location":"standalone/ColorspaceConvert/development/#creating-the-project","text":"","title":" Creating the project"},{"location":"standalone/ColorspaceConvert/development/#python-version-368","text":"VirtualEnvironment: $ pip install PySide2 == 5.13 . 1 $ pip install colour - science == 0.3 . 15 $ pip install 'colour-science[optional]' $ pip install fbs == 0.8 . 6 $ pip install \"..\\oiio-2.0.5-cp36-none-win_amd64.whl\" The oiio Python wheel can be downloaded here: https://github.com/fredrikaverpil/oiio-python/releases","title":" Python version 3.6.8"},{"location":"standalone/ColorspaceConvert/development/#install-windows-10-sdk","text":"https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk/","title":" Install Windows 10 SDK"},{"location":"standalone/ColorspaceConvert/development/#fix-scipy-lib-not-found-issue","text":"(On windows at least) Scipy cause problem when freezing, to fix: Go to the package location: venvColour\\Lib\\site-packages\\scipy Create a new folder /extra-dll Copy the content of /.libs in /extra-dll Shared under CC BY-SA 4.0 license. BY \u2013 Credit must be given to the creator SA \u2013 Adaptations must be shared under the same terms https://creativecommons.org/licenses/by-sa/4.0/","title":" Fix Scipy lib not found Issue:"},{"location":"standalone/ColorspaceConvert/features/","text":"Features \u00b6 Inputs and Outputs \u00b6 List of Input formats supported .exr .png .jpg .jpeg .tiff .hdr .tx Warning Single-channel maps are not supported. List of Output formats supported Format Bitdepth .exr 16 Half, 32 Float .jpg 8 Int .png 8 Int, 16 Int What is the behaviour of the export checkable circles ? Export in a new folder: The file will be placed in a new folder named \"ACEScg\" located at the same location of the original file if no path is given. Else the output files will be placed in the given folder path. Export at the same location: a new file prefixed with the target colorspace or the ODT/Tf will be created. Danger All outputs are cropped to RGBA (if alpha supported) channels. So if you input multi-channel exrs and output exrs, you will lose all your other channels. Danger Mipmapping is not supported for output. You can input mipmapped exr/tiff/tx but the output will loose its mipmapping. Compression When choosing the compression amount remember that for jpg 100 means less compression while it is the inverse for exrs. Importing folders When drag&dropping a folder, all the files inside it and its sub-directories will be added! IDT \u00b6 IDTs allow to specify to which colorspace your file primaries belongs too but also which transfer-function is applied to your file. Utility - Raw : specify that you don't want any conversion. It can be usefull if you just want to switch the format of a file. Utility - Texture - rec709 : if your file has sRGB/rec709 primaries with a gamma2.2 transfer function applied. \u200b ODT/Transfer Functions \u00b6 Availability The ODT / Transfer Function dropdown is only available when the Output format is set to a integer format (.jpg or .png) ACES ODTs ( prefixed with (ACES) ) are only available when the Target ColorSpace is set to ACEScg Converter \u00b6 Depending on your export options and your input file size, the converting process can become very slow. Applying an ACES ODT is the slowest operation. Colorspaces conversion are processed with a Bradford chromatic adaptation. Shortcuts \u00b6 Ctrl + A : Select all file in the list Del : remove a file (no undo) Backspace : remove a file (no undo) You can also use the directionnal arrow to navigate in the list and shift to select items. Logging \u00b6 You can find the log file here: yourdocumentspath/PYCO/ColorSpaceConverter/log_file.log You can also open it by clicking on the \"log\" Icon in the UI.","title":"Features"},{"location":"standalone/ColorspaceConvert/features/#features","text":"","title":" Features"},{"location":"standalone/ColorspaceConvert/features/#inputs-and-outputs","text":"List of Input formats supported .exr .png .jpg .jpeg .tiff .hdr .tx Warning Single-channel maps are not supported. List of Output formats supported Format Bitdepth .exr 16 Half, 32 Float .jpg 8 Int .png 8 Int, 16 Int What is the behaviour of the export checkable circles ? Export in a new folder: The file will be placed in a new folder named \"ACEScg\" located at the same location of the original file if no path is given. Else the output files will be placed in the given folder path. Export at the same location: a new file prefixed with the target colorspace or the ODT/Tf will be created. Danger All outputs are cropped to RGBA (if alpha supported) channels. So if you input multi-channel exrs and output exrs, you will lose all your other channels. Danger Mipmapping is not supported for output. You can input mipmapped exr/tiff/tx but the output will loose its mipmapping. Compression When choosing the compression amount remember that for jpg 100 means less compression while it is the inverse for exrs. Importing folders When drag&dropping a folder, all the files inside it and its sub-directories will be added!","title":" Inputs and Outputs"},{"location":"standalone/ColorspaceConvert/features/#idt","text":"IDTs allow to specify to which colorspace your file primaries belongs too but also which transfer-function is applied to your file. Utility - Raw : specify that you don't want any conversion. It can be usefull if you just want to switch the format of a file. Utility - Texture - rec709 : if your file has sRGB/rec709 primaries with a gamma2.2 transfer function applied. \u200b","title":" IDT"},{"location":"standalone/ColorspaceConvert/features/#odttransfer-functions","text":"Availability The ODT / Transfer Function dropdown is only available when the Output format is set to a integer format (.jpg or .png) ACES ODTs ( prefixed with (ACES) ) are only available when the Target ColorSpace is set to ACEScg","title":" ODT/Transfer Functions"},{"location":"standalone/ColorspaceConvert/features/#converter","text":"Depending on your export options and your input file size, the converting process can become very slow. Applying an ACES ODT is the slowest operation. Colorspaces conversion are processed with a Bradford chromatic adaptation.","title":" Converter"},{"location":"standalone/ColorspaceConvert/features/#shortcuts","text":"Ctrl + A : Select all file in the list Del : remove a file (no undo) Backspace : remove a file (no undo) You can also use the directionnal arrow to navigate in the list and shift to select items.","title":" Shortcuts"},{"location":"standalone/ColorspaceConvert/features/#logging","text":"You can find the log file here: yourdocumentspath/PYCO/ColorSpaceConverter/log_file.log You can also open it by clicking on the \"log\" Icon in the UI.","title":"Logging"},{"location":"standalone/ColorspaceConvert/home/","text":"PYCO Image Colorspace Converter \u00b6 Quickly switch colorspaces and file format for your textures, hdris, ... Get the app Download the app here: https://gum.co/pycocs About \u00b6 This utility is targeted at VFX/Animation artists for use in converting input images to a designated target color space. It includes export options such as file format, bit depth, and others. The app only works with 2d images for now. Known limitations & bugs Performance can become very bad with ACES ODTs. Running the app as administrator on Windows will disable drag & drop You can't convert tiff to png (png will have an error) CONTRIBUTORS \u00b6 Development made possible thanks to ColorScience Package Fredrik Averpil's and Sidney Guenther's work Material Design Icons OpenImage IO Thibault Houdon Formations Special Thanks to: Documentation revision: J\u00f8rgen Herland , kn9 , Douglas Bischoff Beta testing: Muhammed Hamed , Valentin Nicolini , J\u00f8rgen Herland , Douglas Bischoff , Chris Brejon Upcoming Features \u00b6 Some of these are simply ideas that might not never be realised. .tx Output mipmapping for output support RGB single color-converter Demoisaicing RAW files Image primaries plotting on CIE Diagram Options to create a scaled version version of the output (4k to 2k for exemple) Precise manually the transferfunction/primaries/whitepoint instead of using the IDT","title":"Home"},{"location":"standalone/ColorspaceConvert/home/#pyco-image-colorspace-converter","text":"Quickly switch colorspaces and file format for your textures, hdris, ... Get the app Download the app here: https://gum.co/pycocs","title":"PYCO Image Colorspace Converter"},{"location":"standalone/ColorspaceConvert/home/#about","text":"This utility is targeted at VFX/Animation artists for use in converting input images to a designated target color space. It includes export options such as file format, bit depth, and others. The app only works with 2d images for now. Known limitations & bugs Performance can become very bad with ACES ODTs. Running the app as administrator on Windows will disable drag & drop You can't convert tiff to png (png will have an error)","title":" About"},{"location":"standalone/ColorspaceConvert/home/#contributors","text":"Development made possible thanks to ColorScience Package Fredrik Averpil's and Sidney Guenther's work Material Design Icons OpenImage IO Thibault Houdon Formations Special Thanks to: Documentation revision: J\u00f8rgen Herland , kn9 , Douglas Bischoff Beta testing: Muhammed Hamed , Valentin Nicolini , J\u00f8rgen Herland , Douglas Bischoff , Chris Brejon","title":" CONTRIBUTORS"},{"location":"standalone/ColorspaceConvert/home/#upcoming-features","text":"Some of these are simply ideas that might not never be realised. .tx Output mipmapping for output support RGB single color-converter Demoisaicing RAW files Image primaries plotting on CIE Diagram Options to create a scaled version version of the output (4k to 2k for exemple) Precise manually the transferfunction/primaries/whitepoint instead of using the IDT","title":" Upcoming Features"},{"location":"standalone/ColorspaceConvert/startguide/","text":"GETTING STARTED \u00b6 Think to also read the Features page Installation \u00b6 Pyco Colorspace can be downloaded here: https://gum.co/pycocs Choose the package to download depending on the OS you are on. You can then extract the zip you got and inside the application folder and open the .exe ACES Workflow Reminder: Reminder that in an ACES workflow, only the color maps need to be converted. This means maps that hold color values displayed in the render image. (a Normal map is not a color map but a scalar/data map). Import files \u00b6 You can simply drag & drop any supported file(s) or even just a folder. You can also click on the folder icon to open files through your OS explorer. When dragging a folder all the files inside it and its sub-directories will be added! To delete a file you can simply select it and press Del or Backspace . Set the IDT \u00b6 The IDT (Input Device Transform) specifies the input file colorspace primaries, white point and transfer-function. For example Utility-sRGB-Texture specifies that the file has sRGB primaries with the sRGB EOTF transfer function while Utility-sRGB-Linear specifies that the transfer function is Linear To apply an IDT to the desired files: Select one or multiple files in the list (shift+click) Select the desired IDT in the dropdown menu. Click on Apply to Selection / Apply to All (No selection is needed for this one) You can also click & drag down/up to select multiple files quickly in the list. Change Output options \u00b6 Select the colorspace to convert file primaries to in the dropdown. \u00b6 If the IDT and Target Colorspace are the same no conversion will happen. Select your output format: \u00b6 exr The professional-grade image storage format of the motion picture industry to be used in your 3D applications for input such as textures, HDRIs, etc but not for your final displayable-delivery-content. jpg, png Low dynamic range displayable file formats suitable for online-view , previews, thumbnails, etc. A Transfer-function / ODT is required to be applied. Select your bitdepth (output format dependent) \u00b6 Warning When converting HDRIs it is recommended to output a 32bit Float file to not clip any values Pick your compression method (exr only) \u00b6 None: No compression, for archive files mostly. Or if you need maximum reading speed. PIZ: (lossless) Same speed for decompression/compression. Best for scan-line based files. Zip: (lossless) faster decompression and slower compression than PIZ. Best for textures. Zips: (lossless) Same, but can be write/read faster in some software. Dwaa: (lossy) Produce very light files (default compression amount: 45) Dwab: (lossy) Same as above, but can generate faster result in some applications. B44: (lossy) Only for HALF-Float images. Best for real-time playback of image sequence. Read more about this here: https://www.exr-io.com/openexr-data-compression/ . Set the compression amount (output format & compression method dependent) \u00b6 jpg: 100 = Max Quality; 0 = Minimum quality, but light files exr(dwaa/dwaab): 0 means Max quality Select your output location option. \u00b6 Refer to the Features page. Start The Conversion \u00b6 Click on the green \"play\" button in the toolbar to start converting. When a file is converted, it will be removed from the list. If you click on \"Abort\", the currently converted files will still be converted. Some Examples \u00b6 Importing a 3d render in .exr, rendered with ACEScg primaries and applying an ODT for sharing on Internet: IDT : ACEScg ; TargetColorSpace : ACEScg ; Output format : .jpg ; Compression : 100 (max quality) ; ODT : sRGB(ACES) Importing a albedo texture in .exr from Megascans (sRGB primaries) and convert it to ACEScg IDT : Utility - Linear- sRGB ; TargetColorSpace : ACEScg ; Output format : .exr; BitDepth : 16b Half-Float; Compression : zip;","title":"Getting started"},{"location":"standalone/ColorspaceConvert/startguide/#getting-started","text":"Think to also read the Features page","title":" GETTING STARTED"},{"location":"standalone/ColorspaceConvert/startguide/#installation","text":"Pyco Colorspace can be downloaded here: https://gum.co/pycocs Choose the package to download depending on the OS you are on. You can then extract the zip you got and inside the application folder and open the .exe ACES Workflow Reminder: Reminder that in an ACES workflow, only the color maps need to be converted. This means maps that hold color values displayed in the render image. (a Normal map is not a color map but a scalar/data map).","title":" Installation"},{"location":"standalone/ColorspaceConvert/startguide/#import-files","text":"You can simply drag & drop any supported file(s) or even just a folder. You can also click on the folder icon to open files through your OS explorer. When dragging a folder all the files inside it and its sub-directories will be added! To delete a file you can simply select it and press Del or Backspace .","title":" Import files"},{"location":"standalone/ColorspaceConvert/startguide/#set-the-idt","text":"The IDT (Input Device Transform) specifies the input file colorspace primaries, white point and transfer-function. For example Utility-sRGB-Texture specifies that the file has sRGB primaries with the sRGB EOTF transfer function while Utility-sRGB-Linear specifies that the transfer function is Linear To apply an IDT to the desired files: Select one or multiple files in the list (shift+click) Select the desired IDT in the dropdown menu. Click on Apply to Selection / Apply to All (No selection is needed for this one) You can also click & drag down/up to select multiple files quickly in the list.","title":" Set the IDT"},{"location":"standalone/ColorspaceConvert/startguide/#change-output-options","text":"","title":" Change Output options"},{"location":"standalone/ColorspaceConvert/startguide/#select-the-colorspace-to-convert-file-primaries-to-in-the-dropdown","text":"If the IDT and Target Colorspace are the same no conversion will happen.","title":" Select the colorspace to convert file primaries to in the dropdown."},{"location":"standalone/ColorspaceConvert/startguide/#select-your-output-format","text":"exr The professional-grade image storage format of the motion picture industry to be used in your 3D applications for input such as textures, HDRIs, etc but not for your final displayable-delivery-content. jpg, png Low dynamic range displayable file formats suitable for online-view , previews, thumbnails, etc. A Transfer-function / ODT is required to be applied.","title":" Select your output format:"},{"location":"standalone/ColorspaceConvert/startguide/#select-your-bitdepth-output-format-dependent","text":"Warning When converting HDRIs it is recommended to output a 32bit Float file to not clip any values","title":" Select your bitdepth (output format dependent)"},{"location":"standalone/ColorspaceConvert/startguide/#pick-your-compression-method-exr-only","text":"None: No compression, for archive files mostly. Or if you need maximum reading speed. PIZ: (lossless) Same speed for decompression/compression. Best for scan-line based files. Zip: (lossless) faster decompression and slower compression than PIZ. Best for textures. Zips: (lossless) Same, but can be write/read faster in some software. Dwaa: (lossy) Produce very light files (default compression amount: 45) Dwab: (lossy) Same as above, but can generate faster result in some applications. B44: (lossy) Only for HALF-Float images. Best for real-time playback of image sequence. Read more about this here: https://www.exr-io.com/openexr-data-compression/ .","title":"  Pick your compression method (exr only)"},{"location":"standalone/ColorspaceConvert/startguide/#set-the-compression-amount-output-format-compression-method-dependent","text":"jpg: 100 = Max Quality; 0 = Minimum quality, but light files exr(dwaa/dwaab): 0 means Max quality","title":" Set the compression amount (output format &amp; compression method dependent)"},{"location":"standalone/ColorspaceConvert/startguide/#select-your-output-location-option","text":"Refer to the Features page.","title":" Select your output location option."},{"location":"standalone/ColorspaceConvert/startguide/#start-the-conversion","text":"Click on the green \"play\" button in the toolbar to start converting. When a file is converted, it will be removed from the list. If you click on \"Abort\", the currently converted files will still be converted.","title":" Start The Conversion"},{"location":"standalone/ColorspaceConvert/startguide/#some-examples","text":"Importing a 3d render in .exr, rendered with ACEScg primaries and applying an ODT for sharing on Internet: IDT : ACEScg ; TargetColorSpace : ACEScg ; Output format : .jpg ; Compression : 100 (max quality) ; ODT : sRGB(ACES) Importing a albedo texture in .exr from Megascans (sRGB primaries) and convert it to ACEScg IDT : Utility - Linear- sRGB ; TargetColorSpace : ACEScg ; Output format : .exr; BitDepth : 16b Half-Float; Compression : zip;","title":" Some Examples"},{"location":"standalone/PointerGamutCLI/features/","text":"Features \u00b6 Command list \u00b6 \"pathto/pointerGamutCLI.exe\" INPUT_FILE_PATH OUTPUT_FILE_PATH [ Options ] INPUT_FILE_PATH is the path to file to generate the map from OUTPUT_FILE_PATH is the path (with the filename.ext) to the map that is going to be generated Options: \u00b6 --colorspace=string colorspace of the file Info This argument should precise the colorspace of your file so enter the one corresponding to your file colorspace. Exemple of colorspace available: ACEScg, sRGB, BT709, ADOBE_WIDE_GAMUT, ADOBE_RGB_1998, ACES_2065_1 --linearize linearized the input based on the colorspace precised --out_map_type=string Choose the type of map to output (heat, add)[default=heat] --tolerance=number How far from the pointer gamut you authorize the pixel values to be.[default=0] ex: 0.1 Inputs and Outputs \u00b6 List of Input formats supported .exr .png .jpg .jpeg .tiff .hdr .tx Warning Single-channel maps are not supported. Output This app has been made to output 8bit int jpg, trying to output an other format might not work. Danger All outputs are cropped to RGB channels. So if you input multi-channel exrs only the RGB channels will be processed.","title":"Features"},{"location":"standalone/PointerGamutCLI/features/#features","text":"","title":" Features"},{"location":"standalone/PointerGamutCLI/features/#command-list","text":"\"pathto/pointerGamutCLI.exe\" INPUT_FILE_PATH OUTPUT_FILE_PATH [ Options ] INPUT_FILE_PATH is the path to file to generate the map from OUTPUT_FILE_PATH is the path (with the filename.ext) to the map that is going to be generated","title":" Command list"},{"location":"standalone/PointerGamutCLI/features/#options","text":"--colorspace=string colorspace of the file Info This argument should precise the colorspace of your file so enter the one corresponding to your file colorspace. Exemple of colorspace available: ACEScg, sRGB, BT709, ADOBE_WIDE_GAMUT, ADOBE_RGB_1998, ACES_2065_1 --linearize linearized the input based on the colorspace precised --out_map_type=string Choose the type of map to output (heat, add)[default=heat] --tolerance=number How far from the pointer gamut you authorize the pixel values to be.[default=0] ex: 0.1","title":"Options:"},{"location":"standalone/PointerGamutCLI/features/#inputs-and-outputs","text":"List of Input formats supported .exr .png .jpg .jpeg .tiff .hdr .tx Warning Single-channel maps are not supported. Output This app has been made to output 8bit int jpg, trying to output an other format might not work. Danger All outputs are cropped to RGB channels. So if you input multi-channel exrs only the RGB channels will be processed.","title":" Inputs and Outputs"},{"location":"standalone/PointerGamutCLI/home/","text":"Pointer's Gamut Checker CommandLineTool \u00b6 [ PG will be used as an acronym for Pointer's Gamut ] This tool allow you to check if the pixels color values of a given image are in the Pointer's Gamut or not. This is a command line tool so it means no interface to interract with. Please refer to the startguide for having an explanation of how to use it if you never used CLI(command lien interface). The outputed result is an image of the same size as the original whith red pixel respresenting the out-of-gamut ones and black the one in the PG. What is the Pointer's Gamut ? The Pointer\u2019s gamut is (an approximation of) the gamut of real surface colors as can be seen by the human eye, based on the research by Michael R. Pointer (1980). What this means is that every color that can be reflected by the surface of an object of any material is inside the Pointer\u2019s gamut. Pointer\u2019s gamut is defined for diffuse reflection (matte surface) -- from https://www.tftcentral.co.uk/articles/pointers_gamut.htm CONTRIBUTORS \u00b6 Development made possible thanks to ColorScience Package Fredrik Averpil's and Sidney Guenther's work Material Design Icons OpenImage IO Thibault Houdon Formations Chris Brejon that introduce me the idea of this tool and provided me an awesome support and documentation.","title":"Home"},{"location":"standalone/PointerGamutCLI/home/#pointers-gamut-checker-commandlinetool","text":"[ PG will be used as an acronym for Pointer's Gamut ] This tool allow you to check if the pixels color values of a given image are in the Pointer's Gamut or not. This is a command line tool so it means no interface to interract with. Please refer to the startguide for having an explanation of how to use it if you never used CLI(command lien interface). The outputed result is an image of the same size as the original whith red pixel respresenting the out-of-gamut ones and black the one in the PG. What is the Pointer's Gamut ? The Pointer\u2019s gamut is (an approximation of) the gamut of real surface colors as can be seen by the human eye, based on the research by Michael R. Pointer (1980). What this means is that every color that can be reflected by the surface of an object of any material is inside the Pointer\u2019s gamut. Pointer\u2019s gamut is defined for diffuse reflection (matte surface) -- from https://www.tftcentral.co.uk/articles/pointers_gamut.htm","title":"Pointer's Gamut Checker CommandLineTool"},{"location":"standalone/PointerGamutCLI/home/#contributors","text":"Development made possible thanks to ColorScience Package Fredrik Averpil's and Sidney Guenther's work Material Design Icons OpenImage IO Thibault Houdon Formations Chris Brejon that introduce me the idea of this tool and provided me an awesome support and documentation.","title":" CONTRIBUTORS"},{"location":"standalone/PointerGamutCLI/startguide/","text":"START GUIDE \u00b6 Installation \u00b6 Just unzip the file you downloaded and put the .exe anywhere you want Execute commands Tutorial \u00b6 This application is Command Line based, it means that if you try to open the .exe, nothing will happens. You need to execute the app from a command prompt by calling commands. For that open the windows command prompt (win+r type cmd and hits enter) First you need to get the path to the .exe so go where you saved the app, shift+rightclick on it -> copy as path Go back in the command prompt, paste the path (shift+inser)(the path must start and end with \"\" ) Now enter the path of the outpute file (with also the name.ext)(put a space between the 2 path) \"L:\\tests\\texture_pgmap.jpg\" Enter the colorspace of the file --colorspace=sRGB (always with a space after the last argument writed) Info This argument should precise the colorspace of your file so enter the one corresponding to your file colorspace. Exemple of colorspace available: ACEScg, sRGB, BT709, ADOBE_WIDE_GAMUT, ADOBE_RGB_1998, ACES_2065_1 If your file is not linear add --linearize that will linearize your file based on the colorspace precised. You can precise the tolerance amount you want by adding --tolerance=yourNumber which is by default 0 Exemple of command: \u00b6 \"./script/pointerGamutCLI.exe\" \"L:\\megascans\\td3nedtla_4K_Albedo.exr\" \"L:\\megascans\\CLI_apple_01.jpg\" --colorspace = sRGB","title":"Getting started"},{"location":"standalone/PointerGamutCLI/startguide/#start-guide","text":"","title":" START GUIDE"},{"location":"standalone/PointerGamutCLI/startguide/#installation","text":"Just unzip the file you downloaded and put the .exe anywhere you want","title":" Installation"},{"location":"standalone/PointerGamutCLI/startguide/#execute-commands-tutorial","text":"This application is Command Line based, it means that if you try to open the .exe, nothing will happens. You need to execute the app from a command prompt by calling commands. For that open the windows command prompt (win+r type cmd and hits enter) First you need to get the path to the .exe so go where you saved the app, shift+rightclick on it -> copy as path Go back in the command prompt, paste the path (shift+inser)(the path must start and end with \"\" ) Now enter the path of the outpute file (with also the name.ext)(put a space between the 2 path) \"L:\\tests\\texture_pgmap.jpg\" Enter the colorspace of the file --colorspace=sRGB (always with a space after the last argument writed) Info This argument should precise the colorspace of your file so enter the one corresponding to your file colorspace. Exemple of colorspace available: ACEScg, sRGB, BT709, ADOBE_WIDE_GAMUT, ADOBE_RGB_1998, ACES_2065_1 If your file is not linear add --linearize that will linearize your file based on the colorspace precised. You can precise the tolerance amount you want by adding --tolerance=yourNumber which is by default 0","title":" Execute commands Tutorial"},{"location":"standalone/PointerGamutCLI/startguide/#exemple-of-command","text":"\"./script/pointerGamutCLI.exe\" \"L:\\megascans\\td3nedtla_4K_Albedo.exr\" \"L:\\megascans\\CLI_apple_01.jpg\" --colorspace = sRGB","title":"Exemple of command:"}]}