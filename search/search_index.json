{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to PYCO Documentation \u00b6 This is the online documentation for all PYCO Apps You can find all the apps on Gumroad: https://gumroad.com/liam_collod","title":"Home"},{"location":"#welcome-to-pyco-documentation","text":"This is the online documentation for all PYCO Apps You can find all the apps on Gumroad: https://gumroad.com/liam_collod","title":" Welcome to PYCO Documentation"},{"location":"about/","text":"ABOUT \u00b6 PYCO (PYthon Creation Optimizer) are a collection of apps & scripts created to improve artists workflow. The tools are based on the Python language with graphical interfaces realised mostly with the PySide2 library. Developed by Liam Collod (MrLixm) You can download the app on Gumroad: https://gumroad.com/liam_collod","title":"About"},{"location":"about/#about","text":"PYCO (PYthon Creation Optimizer) are a collection of apps & scripts created to improve artists workflow. The tools are based on the Python language with graphical interfaces realised mostly with the PySide2 library. Developed by Liam Collod (MrLixm) You can download the app on Gumroad: https://gumroad.com/liam_collod","title":" ABOUT"},{"location":"whatsnew/","text":"What's new ? \u00b6 24/01/2021 Documentation update \u00b6 Added a Licenses page where you can find the EULA you have to agree to before downloading a product. 23/01/2021 Documentation update \u00b6 Added a \"For Linux\" page in the ColorSpace Converter documentation. This is a tutorial by Rafael Moco to run the app on Linux. Colorspace Converter on Linux 19/09/2020 New tool \u00b6 Release of the Pointer's Gamut checker tool that allow you to check if your albedo textures are physcially correct. Available as a command line tool. Pointer's Gamut tool documentation 05/07/2020 New tool \u00b6 Release of the Colorspace Converter tool that allow you to quickly convert textures/images between different colorspaces Colorspace Converter documentation","title":"What's new ?"},{"location":"whatsnew/#whats-new","text":"","title":" What's new ?"},{"location":"whatsnew/#24012021-documentation-update","text":"Added a Licenses page where you can find the EULA you have to agree to before downloading a product.","title":"24/01/2021 Documentation update"},{"location":"whatsnew/#23012021-documentation-update","text":"Added a \"For Linux\" page in the ColorSpace Converter documentation. This is a tutorial by Rafael Moco to run the app on Linux. Colorspace Converter on Linux","title":"23/01/2021 Documentation update"},{"location":"whatsnew/#19092020-new-tool","text":"Release of the Pointer's Gamut checker tool that allow you to check if your albedo textures are physcially correct. Available as a command line tool. Pointer's Gamut tool documentation","title":"19/09/2020 New tool"},{"location":"whatsnew/#05072020-new-tool","text":"Release of the Colorspace Converter tool that allow you to quickly convert textures/images between different colorspaces Colorspace Converter documentation","title":"05/07/2020 New tool"},{"location":"katana/TextureMonitor/development/","text":"Development \u00b6 Github repo https://github.com/MrLixm/Katana_Texture-Monitor License \u00b6 Unless you buy a specific license, this work is licensed by default under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License . To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/ . Which can be resumed to: No commercial use You must give appropriate credit and provide a link to the license. You can share, copy and redistribute the material in any medium or format under the same license. You must distribute your contributions under the same license as the original. ( these restrictions might not apply if you bought a commercial license ) Abbreviations used r-e : render-engine re-tex : render-engine textures tpt : texture processor tool (like maketx.exe ) Expanding Render-engine features \u00b6 The tool can support any render-engine but is only shipped with Redshift , 3Delight and Arnold , with the last two having limited render-engine texture baking features. You can find the Render-engine modules in Tabs\\textureMonitor\\script\\render_engine . Each r-e is represented by a .py file to its name. Here is first how this file is structured, and then a tutorial to modify it. Render-engine File structure \u00b6 You can add any function/variable in the file but you have to keep all the existing one (except _find_retexture_processor() which is only used locally). name ( variable ) (str) Name of the render-engine, use the name you give to the file. (ex: \"Vray\" ) re_tex_ext ( variable ) (str) Name of the extension of the re-tex, with the dot (ex: \".tx\" ). support_re_baking ( variable ) (bool) Setting it to True will unlock feature for baking re-tex PATH_PATTERN ( variable ) ((dict)(str:str)) This allow the tool to find children textures related to a filepath that use a token like . Read the docstring above, you will need to have a look at your r-e documentation to know which token are supported. The key is a python regular expression. . (from the re module) The value is a python glob module expression . (Unix shell-style wildcards) r-e such as Arnold allow to use rendertime-evaluated token (such as which make impossible to find exactly what children it refers to. Accordingly a \"wide\" match is performed with \"*\". re_textool ( variable ) (str) Path to the re-tex processing tool, ex: \"C:\\\\Redshift\\\\bin\\\\redshiftTextureProcessor.exe\" In the template I used a function to be sure the path exists and to return a different path depending of the user setup. bake_retex ( function ) (optional if re_tex_ext is disabled) Send a command with the file_path arg to the texture processor tool. You can then perform a simple check if the texture.re_tex_ext exists and return False if not. This function will be used in a QThread Args: file_path(str): file path to bake Returns: bool: rstex_path if success else False if error Raises: ValueError: if file_path arg is not a string get_re_texture_nodes ( function ) (required) Iterate trough the node in the scene to find texture-Nodes. Each one is added in a dictionnary where the key is the katana node and the value is a list with list[0] =file path normalized and list[1] = file path katana parameter. Returns: dict: Nodes3DAPI.ShadingNodeBase:[str, Parameter] return_retex_from_path ( function ) (required) From a given filepath (no matter if it exists or not) return what could be the potential path of the re-tex one. If you check that the re-tex didn't exists you can just return an empty string.(the result is going to be pick later by an os.path.exists() ) Ex: D:\\projects\\textures\\texture01.exr will return D:\\projects\\textures\\texture01.tx for Arnold Adding a render-engine \u00b6 Duplicate the __template.py file and rename it with the name of your render-engine, starting by a capital letter. (ex: Vray ). It is recommended to have a look at the existing one (Redshift being fully completed). First step is to fill the variable as explained in the above section. For the re_textool variable you can if you want skip the function _find_retexture_processor() and directly assign the path to the texture processor tool. bake_retex() is optionnal if you set support_re_baking variable to False . Else using the subprocess module you can call the tpt passing it the file_path argument. To know which command to send to the tpt you will need to read your r-e documentation get_re_texture_nodes() It is the core function of the tool as it allow to pick up the texture nodes. The function is already built but you can of course re-write it as you wish as long as it returns the same dictionnary. If you want to keep it like this you can replace the \"___TO CHANGE___\" as follow: First: name of the r-e shading node. ex: ArnoldShadingNode Second: name of the type set on the shading node for texture nodes. ex: TextureSampler for Redshift. Third: python path of the parameter relative to the file path. To get it you can just hover your mouse over the parameter in the interface. You must add .value at its end. ex: parameters.tex0.value for Redshift return_retex_from_path() You should have nothing to touch in this function if your r-e doesn't doesn't anything fancy with the re-tex. For example 3Delight add the OCIO colorspace used in the path (original_name + OCIO + .tdl) so i had to use the glob module to return the existing tdl file. If the file didn't exists it just return an empty string. Expanding features \u00b6 I tried to make the code as much flexible as I could to incorporate other features. As an example you can find the TREEW_DATA dict in \\constants.py which allow to easily add an other column to the tree widget. Unfortunately for you who are reading this I didn't have time for now to make a detailed tutorial on how to use my code to expand features in the tool. You can reach to me if you would like more detail about this: monsieurlixm@gmail.com Liam Collod","title":"Development"},{"location":"katana/TextureMonitor/development/#development","text":"Github repo https://github.com/MrLixm/Katana_Texture-Monitor","title":" Development"},{"location":"katana/TextureMonitor/development/#license","text":"Unless you buy a specific license, this work is licensed by default under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License . To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/ . Which can be resumed to: No commercial use You must give appropriate credit and provide a link to the license. You can share, copy and redistribute the material in any medium or format under the same license. You must distribute your contributions under the same license as the original. ( these restrictions might not apply if you bought a commercial license ) Abbreviations used r-e : render-engine re-tex : render-engine textures tpt : texture processor tool (like maketx.exe )","title":"License"},{"location":"katana/TextureMonitor/development/#expanding-render-engine-features","text":"The tool can support any render-engine but is only shipped with Redshift , 3Delight and Arnold , with the last two having limited render-engine texture baking features. You can find the Render-engine modules in Tabs\\textureMonitor\\script\\render_engine . Each r-e is represented by a .py file to its name. Here is first how this file is structured, and then a tutorial to modify it.","title":" Expanding Render-engine features"},{"location":"katana/TextureMonitor/development/#render-engine-file-structure","text":"You can add any function/variable in the file but you have to keep all the existing one (except _find_retexture_processor() which is only used locally). name ( variable ) (str) Name of the render-engine, use the name you give to the file. (ex: \"Vray\" ) re_tex_ext ( variable ) (str) Name of the extension of the re-tex, with the dot (ex: \".tx\" ). support_re_baking ( variable ) (bool) Setting it to True will unlock feature for baking re-tex PATH_PATTERN ( variable ) ((dict)(str:str)) This allow the tool to find children textures related to a filepath that use a token like . Read the docstring above, you will need to have a look at your r-e documentation to know which token are supported. The key is a python regular expression. . (from the re module) The value is a python glob module expression . (Unix shell-style wildcards) r-e such as Arnold allow to use rendertime-evaluated token (such as which make impossible to find exactly what children it refers to. Accordingly a \"wide\" match is performed with \"*\". re_textool ( variable ) (str) Path to the re-tex processing tool, ex: \"C:\\\\Redshift\\\\bin\\\\redshiftTextureProcessor.exe\" In the template I used a function to be sure the path exists and to return a different path depending of the user setup. bake_retex ( function ) (optional if re_tex_ext is disabled) Send a command with the file_path arg to the texture processor tool. You can then perform a simple check if the texture.re_tex_ext exists and return False if not. This function will be used in a QThread Args: file_path(str): file path to bake Returns: bool: rstex_path if success else False if error Raises: ValueError: if file_path arg is not a string get_re_texture_nodes ( function ) (required) Iterate trough the node in the scene to find texture-Nodes. Each one is added in a dictionnary where the key is the katana node and the value is a list with list[0] =file path normalized and list[1] = file path katana parameter. Returns: dict: Nodes3DAPI.ShadingNodeBase:[str, Parameter] return_retex_from_path ( function ) (required) From a given filepath (no matter if it exists or not) return what could be the potential path of the re-tex one. If you check that the re-tex didn't exists you can just return an empty string.(the result is going to be pick later by an os.path.exists() ) Ex: D:\\projects\\textures\\texture01.exr will return D:\\projects\\textures\\texture01.tx for Arnold","title":" Render-engine File structure"},{"location":"katana/TextureMonitor/development/#adding-a-render-engine","text":"Duplicate the __template.py file and rename it with the name of your render-engine, starting by a capital letter. (ex: Vray ). It is recommended to have a look at the existing one (Redshift being fully completed). First step is to fill the variable as explained in the above section. For the re_textool variable you can if you want skip the function _find_retexture_processor() and directly assign the path to the texture processor tool. bake_retex() is optionnal if you set support_re_baking variable to False . Else using the subprocess module you can call the tpt passing it the file_path argument. To know which command to send to the tpt you will need to read your r-e documentation get_re_texture_nodes() It is the core function of the tool as it allow to pick up the texture nodes. The function is already built but you can of course re-write it as you wish as long as it returns the same dictionnary. If you want to keep it like this you can replace the \"___TO CHANGE___\" as follow: First: name of the r-e shading node. ex: ArnoldShadingNode Second: name of the type set on the shading node for texture nodes. ex: TextureSampler for Redshift. Third: python path of the parameter relative to the file path. To get it you can just hover your mouse over the parameter in the interface. You must add .value at its end. ex: parameters.tex0.value for Redshift return_retex_from_path() You should have nothing to touch in this function if your r-e doesn't doesn't anything fancy with the re-tex. For example 3Delight add the OCIO colorspace used in the path (original_name + OCIO + .tdl) so i had to use the glob module to return the existing tdl file. If the file didn't exists it just return an empty string.","title":" Adding a render-engine"},{"location":"katana/TextureMonitor/development/#expanding-features","text":"I tried to make the code as much flexible as I could to incorporate other features. As an example you can find the TREEW_DATA dict in \\constants.py which allow to easily add an other column to the tree widget. Unfortunately for you who are reading this I didn't have time for now to make a detailed tutorial on how to use my code to expand features in the tool. You can reach to me if you would like more detail about this: monsieurlixm@gmail.com Liam Collod","title":" Expanding features"},{"location":"katana/TextureMonitor/features/","text":"Features \u00b6 Requirements \u00b6 Tested on Windows 10, some features might not work on other OS. Tested on Katana 3.6v2 and Katana 4.0v2 with Redshift and 3Delight. Special characters used in file path (such as whitespaces) may cause issues. settings.json file \u00b6 Located in Tabs\\textureMonitor Default setting: { \"default_render_engine\" : \"Delight\" , \"enable_retex\" : true , \"default_ui_width\" : 1200 , \"locked_paths\" : [ \"R:\\\\Imapath\\\\toafile_exemple.exr\" , \"R:\\\\Imapath\\\\toafile_exemple02.exr\" ] } default_render_engine string : Choose the render engine used when the tool is started. The value should correspond to the name of a render-engine file existing in Tabs\\textureMonitor\\script\\render_engine enable_retex bool : Choose to enable or not the feature relative to render-engine texture baking (including icons) default_ui_width int : Width in pixel of the UI at startup locked_paths list : List of paths that will appear locked to the user in the UI TreeWidget \u00b6 items Color Coding: Red : The path doesn't exists Blue : The path parameter is computed by an expression White : Default color Grey : This is a \"locked\" texture, that you can't touch. Probably used in a livegroup. Some render-engines support advanced tokens (such as <shapeName> ) that could only be evaluated at render time. This means that for root item with such token the children file path are potential matches Icons for render-engine textures.=: All the re-tex are baked for this item. There is no re-tex baked for this item Some re-tex has been baked for this item (root item with child item) Right-click menu \u00b6 This example is with Redshift: Select and Edit the node : select and edit the texture node Open the location in Explorer : doesn't need explanation Remove Expression : if the file path parameter is computed thanks to an expression you can set it to constant. Bake the .re-tex for selection : if the selected item has children it will also bake all the children. Bake ALL the .re-tex : will bake the re-tex for all the items in the TreeWidget Delete the .re-tex for selection : if the selected item has children it will delete all the child rstexbin. Search and replace \u00b6 The search and replace module is located at the top left above the treeview. The first field is the text you are looking to match. The second field is to enter the text that should replace the first one. When the Ignore Expressions checkbox is checked, only the path that are not computed by expressions are going to be modified. Else, when unchecked, if the path is computed by an expression it will be set to constant. the search and replace fields \u00b6 The search field will work using regular expressions (from the re python module). It means you can use special characters to create matching expressions. (see more details bellow) For example using: texture_\\d will match any text that starts with texture_ and end with a decimal digit. Warning If you would like to match only a single \\ you will have to double it like \\\\ Ex : you would like to match textures\\texture01.exr from D:\\projects\\textures\\texture01.exr , use textures\\\\texture01.exr in the search field. To know how to use regular expression (which is quite complex) you can follow this tutorial: https://www.datacamp.com/community/tutorials/python-regular-expression-tutorial The replace field doesn't have anything particular. You can use single backslash \\ without issues.","title":"Features"},{"location":"katana/TextureMonitor/features/#features","text":"","title":"Features"},{"location":"katana/TextureMonitor/features/#requirements","text":"Tested on Windows 10, some features might not work on other OS. Tested on Katana 3.6v2 and Katana 4.0v2 with Redshift and 3Delight. Special characters used in file path (such as whitespaces) may cause issues.","title":"Requirements"},{"location":"katana/TextureMonitor/features/#settingsjson-file","text":"Located in Tabs\\textureMonitor Default setting: { \"default_render_engine\" : \"Delight\" , \"enable_retex\" : true , \"default_ui_width\" : 1200 , \"locked_paths\" : [ \"R:\\\\Imapath\\\\toafile_exemple.exr\" , \"R:\\\\Imapath\\\\toafile_exemple02.exr\" ] } default_render_engine string : Choose the render engine used when the tool is started. The value should correspond to the name of a render-engine file existing in Tabs\\textureMonitor\\script\\render_engine enable_retex bool : Choose to enable or not the feature relative to render-engine texture baking (including icons) default_ui_width int : Width in pixel of the UI at startup locked_paths list : List of paths that will appear locked to the user in the UI","title":" settings.json file"},{"location":"katana/TextureMonitor/features/#treewidget","text":"items Color Coding: Red : The path doesn't exists Blue : The path parameter is computed by an expression White : Default color Grey : This is a \"locked\" texture, that you can't touch. Probably used in a livegroup. Some render-engines support advanced tokens (such as <shapeName> ) that could only be evaluated at render time. This means that for root item with such token the children file path are potential matches Icons for render-engine textures.=: All the re-tex are baked for this item. There is no re-tex baked for this item Some re-tex has been baked for this item (root item with child item)","title":" TreeWidget"},{"location":"katana/TextureMonitor/features/#right-click-menu","text":"This example is with Redshift: Select and Edit the node : select and edit the texture node Open the location in Explorer : doesn't need explanation Remove Expression : if the file path parameter is computed thanks to an expression you can set it to constant. Bake the .re-tex for selection : if the selected item has children it will also bake all the children. Bake ALL the .re-tex : will bake the re-tex for all the items in the TreeWidget Delete the .re-tex for selection : if the selected item has children it will delete all the child rstexbin.","title":" Right-click menu"},{"location":"katana/TextureMonitor/features/#search-and-replace","text":"The search and replace module is located at the top left above the treeview. The first field is the text you are looking to match. The second field is to enter the text that should replace the first one. When the Ignore Expressions checkbox is checked, only the path that are not computed by expressions are going to be modified. Else, when unchecked, if the path is computed by an expression it will be set to constant.","title":" Search and replace"},{"location":"katana/TextureMonitor/features/#the-search-and-replace-fields","text":"The search field will work using regular expressions (from the re python module). It means you can use special characters to create matching expressions. (see more details bellow) For example using: texture_\\d will match any text that starts with texture_ and end with a decimal digit. Warning If you would like to match only a single \\ you will have to double it like \\\\ Ex : you would like to match textures\\texture01.exr from D:\\projects\\textures\\texture01.exr , use textures\\\\texture01.exr in the search field. To know how to use regular expression (which is quite complex) you can follow this tutorial: https://www.datacamp.com/community/tutorials/python-regular-expression-tutorial The replace field doesn't have anything particular. You can use single backslash \\ without issues.","title":"the search and replace fields"},{"location":"katana/TextureMonitor/home/","text":"PYCO4Katana: Texture Monitor tool \u00b6 Manage Textures easily in your Katana project. Get the app Download the app here: https://gum.co/texmonitor About \u00b6 This tool aim to quickly have a global look at all the texture existing in a Katana project. It also introduce some convenient feature such as render-engine texture baking, search and replace, ... CONTRIBUTORS \u00b6 Development made possible thanks to Material Design Icons JetBrains Mono font Thibault Houdon Formations Special Thanks to: People on the Katana's Discord","title":"Home"},{"location":"katana/TextureMonitor/home/#pyco4katana-texture-monitor-tool","text":"Manage Textures easily in your Katana project. Get the app Download the app here: https://gum.co/texmonitor","title":"PYCO4Katana: Texture Monitor tool"},{"location":"katana/TextureMonitor/home/#about","text":"This tool aim to quickly have a global look at all the texture existing in a Katana project. It also introduce some convenient feature such as render-engine texture baking, search and replace, ...","title":" About"},{"location":"katana/TextureMonitor/home/#contributors","text":"Development made possible thanks to Material Design Icons JetBrains Mono font Thibault Houdon Formations Special Thanks to: People on the Katana's Discord","title":" CONTRIBUTORS"},{"location":"katana/TextureMonitor/startguide/","text":"Start Guide \u00b6 Installation \u00b6 For the first time, you will not need to do any particular manipulation to make the tool work, but you might want to modify his behaviour depending of your workflow. The tool was made to support any render-engine but right now only Redshift , 3Delight and Arnold are supported, with the last two having limited render-engine texture baking features. This could be improved in the future if I get some help. Else you can follow the guide in the development section to add or customize your render-engine support. Registering the tool in Katana \u00b6 Once downloaded you will need to place the Tabs folder in a location registered by Katana as a KATANA_RESOURCES location. Here is a step by step tutorial for Windows: Put the Tabs folder somewhere on your disk for example in D:\\resources\\katana\\katana_resources_v01 In the .bat file used to launch your Katana, find the line where you set the KATANA_RESOURCES variable. Just before create a variable pointing to your resources directory ( D:\\resources\\katana\\katana_resources_v01 ) set \"RESOURCES_PERSO=D:\\resources\\katana\\katana_resources_v01\" Then extend the KATANA_RESOURCES variable with the variable you just created. Use ; to add multiple locations. rem This example also register Redshift and USD set \"KATANA_RESOURCES=%REDSHIFT4KAT_HOME%;%RESOURCES_PERSO%;%KATANA_HOME%\\plugins\\Resources\\Usd\\plugin;\" And you are done, you can just then launch Katana with the .bat. The tool can then be find in the Tabs menu in the top bar. Behaviour customization \u00b6 If you go in the \\Tabs\\textureMonitor folder you will find a settings.json file. This file allow you to customize preferences for the tool. modifying a json file If you are not familiar with the json file format here is some tips: You can open it in any text editor to edit it. You have to respect the formatting to not raise errors: true or false are in lower case there is a , at the end of all line except the last one strings have to be surrounded by \" Please refer to the feature section for all the details. If you would like to add a render-engine or modify the behaviour of an existing one please refer to the development section . Principe \u00b6 Core of the tool are texture nodes . Texture node are shadingNode varying based on the render-engine used. For 3Delight these nodes are named dlTexture for example and can be found in NetworkMaterials. This tool will not list file paths than can be used in lights or in attributes. For every texture node find in your scene you will have a root-item in the TreeWidget (if the path parameter is non-empty). root-item is a top-level item that can have zero or more children. These items can have children if the filepath use a token that can refer to multiple file paths. The must common token is the <UDIM> one (writing can change depending of the render engine). If such token exists in the path the tool will find the texture it (might) refer to and add it as a children of the root item. To see the children of a root-item you can expand it by double clicking on it or clicking on the arrow at it left. render-engine texture baking \u00b6 All render-engine used an optimized proprietary image format to store textures. For some render-engine it is required to manually create this textures, or just to get the control on it in the pipeline. This tool allow you to create and manage this render-engine textures (let's called them re-tex ) effortless. Info This feature can be disabled globally in the settings.json if not desired. You can easily see if the re-tex has been baked for an item in the TreeWidget thanks to their icon: All the re-tex are baked for this item. There is no re-tex baked for this item Some re-tex has been baked for this item (root item with child item) To perform any re-tex related action you have to right-click on a item. This will open a context menu with option on it , please refer to the Features section to get all the details. Search and replace \u00b6 The tool also ship with a search & replace feature that allow you to modify the path of multiple textures in one go. Everything is explained in the Features section .","title":"Start Guide"},{"location":"katana/TextureMonitor/startguide/#start-guide","text":"","title":" Start Guide"},{"location":"katana/TextureMonitor/startguide/#installation","text":"For the first time, you will not need to do any particular manipulation to make the tool work, but you might want to modify his behaviour depending of your workflow. The tool was made to support any render-engine but right now only Redshift , 3Delight and Arnold are supported, with the last two having limited render-engine texture baking features. This could be improved in the future if I get some help. Else you can follow the guide in the development section to add or customize your render-engine support.","title":"Installation"},{"location":"katana/TextureMonitor/startguide/#registering-the-tool-in-katana","text":"Once downloaded you will need to place the Tabs folder in a location registered by Katana as a KATANA_RESOURCES location. Here is a step by step tutorial for Windows: Put the Tabs folder somewhere on your disk for example in D:\\resources\\katana\\katana_resources_v01 In the .bat file used to launch your Katana, find the line where you set the KATANA_RESOURCES variable. Just before create a variable pointing to your resources directory ( D:\\resources\\katana\\katana_resources_v01 ) set \"RESOURCES_PERSO=D:\\resources\\katana\\katana_resources_v01\" Then extend the KATANA_RESOURCES variable with the variable you just created. Use ; to add multiple locations. rem This example also register Redshift and USD set \"KATANA_RESOURCES=%REDSHIFT4KAT_HOME%;%RESOURCES_PERSO%;%KATANA_HOME%\\plugins\\Resources\\Usd\\plugin;\" And you are done, you can just then launch Katana with the .bat. The tool can then be find in the Tabs menu in the top bar.","title":" Registering the tool in Katana"},{"location":"katana/TextureMonitor/startguide/#behaviour-customization","text":"If you go in the \\Tabs\\textureMonitor folder you will find a settings.json file. This file allow you to customize preferences for the tool. modifying a json file If you are not familiar with the json file format here is some tips: You can open it in any text editor to edit it. You have to respect the formatting to not raise errors: true or false are in lower case there is a , at the end of all line except the last one strings have to be surrounded by \" Please refer to the feature section for all the details. If you would like to add a render-engine or modify the behaviour of an existing one please refer to the development section .","title":"Behaviour customization"},{"location":"katana/TextureMonitor/startguide/#principe","text":"Core of the tool are texture nodes . Texture node are shadingNode varying based on the render-engine used. For 3Delight these nodes are named dlTexture for example and can be found in NetworkMaterials. This tool will not list file paths than can be used in lights or in attributes. For every texture node find in your scene you will have a root-item in the TreeWidget (if the path parameter is non-empty). root-item is a top-level item that can have zero or more children. These items can have children if the filepath use a token that can refer to multiple file paths. The must common token is the <UDIM> one (writing can change depending of the render engine). If such token exists in the path the tool will find the texture it (might) refer to and add it as a children of the root item. To see the children of a root-item you can expand it by double clicking on it or clicking on the arrow at it left.","title":" Principe"},{"location":"katana/TextureMonitor/startguide/#render-engine-texture-baking","text":"All render-engine used an optimized proprietary image format to store textures. For some render-engine it is required to manually create this textures, or just to get the control on it in the pipeline. This tool allow you to create and manage this render-engine textures (let's called them re-tex ) effortless. Info This feature can be disabled globally in the settings.json if not desired. You can easily see if the re-tex has been baked for an item in the TreeWidget thanks to their icon: All the re-tex are baked for this item. There is no re-tex baked for this item Some re-tex has been baked for this item (root item with child item) To perform any re-tex related action you have to right-click on a item. This will open a context menu with option on it , please refer to the Features section to get all the details.","title":" render-engine texture baking"},{"location":"katana/TextureMonitor/startguide/#search-and-replace","text":"The tool also ship with a search & replace feature that allow you to modify the path of multiple textures in one go. Everything is explained in the Features section .","title":" Search and replace"},{"location":"katana/msimporter/features/","text":"Features \u00b6 This section is a work in progress original assetSource \u00b6 Change the asset Folder Path Change the asset type corresponding to the asset Change other settings according to your rendering preferences custom assetSource \u00b6 Change the asset Folder Path for the asset you want to shade. Change the asset type corresponding to the asset Enter the scene graph path of the assets in assetGraphLocationCustom When using a 3dplant you should precise the atlas ID to have the material working ( copy/paste the id of a texture in the Textures folder) And read the help hint next to the parameters for more details. SPECIFICITIES \u00b6 Auto-setuped to have your asset textured with the albedo in the Hydra viewer. Groups should be placed one after the precedent in case of using a custom geo.(as on the visual) Only work with .exr and .abc be sure to have this file in your asset directory You can't use customGeometry with surface and atlas assetType","title":"Features"},{"location":"katana/msimporter/features/#features","text":"This section is a work in progress","title":" Features"},{"location":"katana/msimporter/features/#original-assetsource","text":"Change the asset Folder Path Change the asset type corresponding to the asset Change other settings according to your rendering preferences","title":"original assetSource"},{"location":"katana/msimporter/features/#custom-assetsource","text":"Change the asset Folder Path for the asset you want to shade. Change the asset type corresponding to the asset Enter the scene graph path of the assets in assetGraphLocationCustom When using a 3dplant you should precise the atlas ID to have the material working ( copy/paste the id of a texture in the Textures folder) And read the help hint next to the parameters for more details.","title":"custom assetSource"},{"location":"katana/msimporter/features/#specificities","text":"Auto-setuped to have your asset textured with the albedo in the Hydra viewer. Groups should be placed one after the precedent in case of using a custom geo.(as on the visual) Only work with .exr and .abc be sure to have this file in your asset directory You can't use customGeometry with surface and atlas assetType","title":"SPECIFICITIES"},{"location":"katana/msimporter/home/","text":"Megascans Importer live group \u00b6 Get the app Download the app here: https://gum.co/ms4katana Import Megascans asset quickly in Katana. Premade for Redshift, Arnold and 3Delight but support importing custom material. You can choose to import custom geometry (ex: set dressed scene) and use the group to assign the material.","title":"Home"},{"location":"katana/msimporter/home/#megascans-importer-live-group","text":"Get the app Download the app here: https://gum.co/ms4katana Import Megascans asset quickly in Katana. Premade for Redshift, Arnold and 3Delight but support importing custom material. You can choose to import custom geometry (ex: set dressed scene) and use the group to assign the material.","title":"Megascans Importer live group"},{"location":"licenses/eula/","text":"EULA \u00b6 PLEASE READ CAREFULLY BEFORE PROCESSING A PURCHASE AS THIS DOCUMENT ALTER YOUR LEGAL RIGHTS: This End-User License Agreement (\"EULA\") is a legal agreement between (a) you,the user, either an individual or a single entity and (b) Pyco, the provider, that will dictate your use of the content provided. If you purchase, download and, or use any of the content produced by Pyco that mention this EULA you automatically accept and agree to be bound by all the terms of the bottom agreement. 1. Definitions \u00b6 a. Non Commercial means not primarily intended for or directed towards commercial advantage or monetary compensation. b. Pyco is the virtual entity representing the work of Liam Collod. c. personal machines represent the computer hardware belonging to a single and individual user, having an exclusive access to this hardware. d. you or the user represent the person or the entity acquiring this content. That may be a natural person, or a corporate or business entity or organization. If you are a corporate entity then: (i) the rights granted under this Agreement are granted to that entity; (ii) you represent and warrant that the individual completing and accepting this Agreement is an authorized your representative and has the authority to legally bind that you to the Agreement; and (iii) to the extent that one or more of your employees are granted any rights in the Product or to receive Professional Services under this Agreement, you will ensure that your employees comply with this Agreement and you will be responsible and liable for any breach of this Agreement by any employee. 2. License Grant \u00b6 Pyco hereby grants You a worldwide, non-sublicensable, non-exclusive, irrevocable license to download and use the content provided by Pyco under the conditions determined by the following licenses models adopted during the purchase of the product. Pyco is responsible for proposing a clear choice between the licenses available for a product. The License become effective from the exact time a product mentioning this EULA is downloaded or bought and bounds you to strictly respect the term defined by the license. 3. Licenses Models \u00b6 a. Personal \u00b6 This license grants the utilisation of the product on a single machine used by a single user for Non-Commercial purposes only. The user may not (a) share (b) distribute any of the content of the product, whether it has been modified or not, without an explicit agreement from Pyco. The user may modify and adapt the content of the product for himself as long as the above rules are respected. b. Personal Creative Commons \u00b6 Licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/ or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA . This license grants the utilisation of the product under the following term: Attribution \u2014 You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use. NonCommercial \u2014 You may not use the material for commercial purposes. ShareAlike \u2014 If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original. c. Freelance \u00b6 This license grants the utilisation of the product on personal machines (1.c.) used by a single user for Commercial purposes. The user may not (a) share (b) distribute any of the content of the product, whether it has been modified or not, without an explicit agreement from Pyco. The user may modify and adapt the content of the product for himself as long as the above rules are respected. d. Indie \u00b6 This license grants the utilisation of the product on multiple machines used by multiple user working for an entity on a sum of project generating an income strictly inferior to $15,000. Income representing the total funds required to the production and distribution of all the projects produced by the user. The user and the entity may not (a) share (b) distribute any of the content of the product, whether it has been modified or not, to users external to the projects without an explicit agreement from Pyco. This imply that content of the product can be modified and share along users working on the same projects within this same entity. e. Studio \u00b6 This license grants the utilisation of the product on multiple machines used by multiple user working for an entity on a sum of project generating an income superior to $15,000. The user and the entity may not (a) share (b) distribute any of the content of the product, whether it has been modified or not, to users external to the projects without an explicit agreement from Pyco. This imply that content of the product can be modified and share along users working on the same projects within this same entity. 3. Additional Restrictions \u00b6 Unless an explicit authorization from Pyco you will not: a. Sell the content produced by Pyco in any way. b. Misrepresent yourself as the creator of the content. c. Make the original content available to other unless explicitly mentioned in the License Model (3.) 4. Update and support \u00b6 Pyco doesn't have any obligation of: a. providing support to the user unless the license model explicitly specify it is. b. Update and maintain the product 5. Term and Termination \u00b6 This Agreement is effective unless terminated. Pyco may terminate this agreement without notice if any term of this agreement is break or if Pyco estimate the content was not acquired through a Pyco distribution platform. Upon any termination you must consent to destroy any content produced by Pyco in your possession, including potential copies. 6. Limitation of Liability \u00b6 All the content is provided to the user without any warranty of any kind. You agree to download and use the content at your own risk and accept that Pyco cannot be responsible of any (a) degradation (b) damage (c) injury of any kind. You agree that the content might not be fully functional and might generate errors. 7. Legal Effect \u00b6 This Agreement describes certain legal rights. You may have other rights under the laws of your country. This Agreement does not change your rights under the laws of your country if the laws of your country do not permit it to do so. 8. Modification \u00b6 Pyco reserve all right to modify this EULA without any notice. In the case a product was bought/downloaded under an older version of this EULA the new EULA version will start to apply only at the moment it is published. In case of litigation the user has to keep the original EULA version included with the file downloaded. Contact \u00b6 For any question or concern about this agreement please reach out to : Liam Collod : monsieurlixm@gmail.com","title":"Eula"},{"location":"licenses/eula/#eula","text":"PLEASE READ CAREFULLY BEFORE PROCESSING A PURCHASE AS THIS DOCUMENT ALTER YOUR LEGAL RIGHTS: This End-User License Agreement (\"EULA\") is a legal agreement between (a) you,the user, either an individual or a single entity and (b) Pyco, the provider, that will dictate your use of the content provided. If you purchase, download and, or use any of the content produced by Pyco that mention this EULA you automatically accept and agree to be bound by all the terms of the bottom agreement.","title":" EULA"},{"location":"licenses/eula/#1-definitions","text":"a. Non Commercial means not primarily intended for or directed towards commercial advantage or monetary compensation. b. Pyco is the virtual entity representing the work of Liam Collod. c. personal machines represent the computer hardware belonging to a single and individual user, having an exclusive access to this hardware. d. you or the user represent the person or the entity acquiring this content. That may be a natural person, or a corporate or business entity or organization. If you are a corporate entity then: (i) the rights granted under this Agreement are granted to that entity; (ii) you represent and warrant that the individual completing and accepting this Agreement is an authorized your representative and has the authority to legally bind that you to the Agreement; and (iii) to the extent that one or more of your employees are granted any rights in the Product or to receive Professional Services under this Agreement, you will ensure that your employees comply with this Agreement and you will be responsible and liable for any breach of this Agreement by any employee.","title":"1. Definitions"},{"location":"licenses/eula/#2-license-grant","text":"Pyco hereby grants You a worldwide, non-sublicensable, non-exclusive, irrevocable license to download and use the content provided by Pyco under the conditions determined by the following licenses models adopted during the purchase of the product. Pyco is responsible for proposing a clear choice between the licenses available for a product. The License become effective from the exact time a product mentioning this EULA is downloaded or bought and bounds you to strictly respect the term defined by the license.","title":"2. License Grant"},{"location":"licenses/eula/#3-licenses-models","text":"","title":"3. Licenses Models"},{"location":"licenses/eula/#a-personal","text":"This license grants the utilisation of the product on a single machine used by a single user for Non-Commercial purposes only. The user may not (a) share (b) distribute any of the content of the product, whether it has been modified or not, without an explicit agreement from Pyco. The user may modify and adapt the content of the product for himself as long as the above rules are respected.","title":" a. Personal"},{"location":"licenses/eula/#b-personal-creative-commons","text":"Licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/ or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA . This license grants the utilisation of the product under the following term: Attribution \u2014 You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use. NonCommercial \u2014 You may not use the material for commercial purposes. ShareAlike \u2014 If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original.","title":" b. Personal Creative Commons"},{"location":"licenses/eula/#c-freelance","text":"This license grants the utilisation of the product on personal machines (1.c.) used by a single user for Commercial purposes. The user may not (a) share (b) distribute any of the content of the product, whether it has been modified or not, without an explicit agreement from Pyco. The user may modify and adapt the content of the product for himself as long as the above rules are respected.","title":" c. Freelance"},{"location":"licenses/eula/#d-indie","text":"This license grants the utilisation of the product on multiple machines used by multiple user working for an entity on a sum of project generating an income strictly inferior to $15,000. Income representing the total funds required to the production and distribution of all the projects produced by the user. The user and the entity may not (a) share (b) distribute any of the content of the product, whether it has been modified or not, to users external to the projects without an explicit agreement from Pyco. This imply that content of the product can be modified and share along users working on the same projects within this same entity.","title":" d. Indie"},{"location":"licenses/eula/#e-studio","text":"This license grants the utilisation of the product on multiple machines used by multiple user working for an entity on a sum of project generating an income superior to $15,000. The user and the entity may not (a) share (b) distribute any of the content of the product, whether it has been modified or not, to users external to the projects without an explicit agreement from Pyco. This imply that content of the product can be modified and share along users working on the same projects within this same entity.","title":" e. Studio"},{"location":"licenses/eula/#3-additional-restrictions","text":"Unless an explicit authorization from Pyco you will not: a. Sell the content produced by Pyco in any way. b. Misrepresent yourself as the creator of the content. c. Make the original content available to other unless explicitly mentioned in the License Model (3.)","title":"3. Additional Restrictions"},{"location":"licenses/eula/#4-update-and-support","text":"Pyco doesn't have any obligation of: a. providing support to the user unless the license model explicitly specify it is. b. Update and maintain the product","title":"4. Update and support"},{"location":"licenses/eula/#5-term-and-termination","text":"This Agreement is effective unless terminated. Pyco may terminate this agreement without notice if any term of this agreement is break or if Pyco estimate the content was not acquired through a Pyco distribution platform. Upon any termination you must consent to destroy any content produced by Pyco in your possession, including potential copies.","title":"5. Term and Termination"},{"location":"licenses/eula/#6-limitation-of-liability","text":"All the content is provided to the user without any warranty of any kind. You agree to download and use the content at your own risk and accept that Pyco cannot be responsible of any (a) degradation (b) damage (c) injury of any kind. You agree that the content might not be fully functional and might generate errors.","title":"6. Limitation of Liability"},{"location":"licenses/eula/#7-legal-effect","text":"This Agreement describes certain legal rights. You may have other rights under the laws of your country. This Agreement does not change your rights under the laws of your country if the laws of your country do not permit it to do so.","title":"7. Legal Effect"},{"location":"licenses/eula/#8-modification","text":"Pyco reserve all right to modify this EULA without any notice. In the case a product was bought/downloaded under an older version of this EULA the new EULA version will start to apply only at the moment it is published. In case of litigation the user has to keep the original EULA version included with the file downloaded.","title":"8. Modification"},{"location":"licenses/eula/#contact","text":"For any question or concern about this agreement please reach out to : Liam Collod : monsieurlixm@gmail.com","title":"Contact"},{"location":"maya/udimselect/","text":"UDIM SELECT \u00b6 Simplify the task of selecting UDIMS, especially for large scenes in Maya. Get the app Download the script here: https://gumroad.com/liam_collod#AuTpL [WIP]","title":"Udim Select"},{"location":"maya/udimselect/#udim-select","text":"Simplify the task of selecting UDIMS, especially for large scenes in Maya. Get the app Download the script here: https://gumroad.com/liam_collod#AuTpL [WIP]","title":"UDIM SELECT"},{"location":"standalone/ColorspaceConvert/development/","text":"Development \u00b6 Public Github repository: https://github.com/MrLixm/Colorspace_Converter Master: Public realeased branch. Develop: Active development branch. Creating the project \u00b6 Python version 3.6.8 \u00b6 VirtualEnvironment: $ pip install PySide2 == 5.13 . 1 $ pip install colour - science == 0.3 . 15 $ pip install 'colour-science[optional]' $ pip install fbs == 0.8 . 6 $ pip install \"..\\oiio-2.0.5-cp36-none-win_amd64.whl\" The oiio Python wheel can be downloaded here: https://github.com/fredrikaverpil/oiio-python/releases Install Windows 10 SDK \u00b6 https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk/ Fix Scipy lib not found Issue: \u00b6 (On windows at least) Scipy cause problem when freezing, to fix: Go to the package location: venvColour\\Lib\\site-packages\\scipy Create a new folder /extra-dll Copy the content of /.libs in /extra-dll Shared under CC BY-SA 4.0 license. BY \u2013 Credit must be given to the creator SA \u2013 Adaptations must be shared under the same terms https://creativecommons.org/licenses/by-sa/4.0/","title":"Development"},{"location":"standalone/ColorspaceConvert/development/#development","text":"Public Github repository: https://github.com/MrLixm/Colorspace_Converter Master: Public realeased branch. Develop: Active development branch.","title":" Development"},{"location":"standalone/ColorspaceConvert/development/#creating-the-project","text":"","title":" Creating the project"},{"location":"standalone/ColorspaceConvert/development/#python-version-368","text":"VirtualEnvironment: $ pip install PySide2 == 5.13 . 1 $ pip install colour - science == 0.3 . 15 $ pip install 'colour-science[optional]' $ pip install fbs == 0.8 . 6 $ pip install \"..\\oiio-2.0.5-cp36-none-win_amd64.whl\" The oiio Python wheel can be downloaded here: https://github.com/fredrikaverpil/oiio-python/releases","title":" Python version 3.6.8"},{"location":"standalone/ColorspaceConvert/development/#install-windows-10-sdk","text":"https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk/","title":" Install Windows 10 SDK"},{"location":"standalone/ColorspaceConvert/development/#fix-scipy-lib-not-found-issue","text":"(On windows at least) Scipy cause problem when freezing, to fix: Go to the package location: venvColour\\Lib\\site-packages\\scipy Create a new folder /extra-dll Copy the content of /.libs in /extra-dll Shared under CC BY-SA 4.0 license. BY \u2013 Credit must be given to the creator SA \u2013 Adaptations must be shared under the same terms https://creativecommons.org/licenses/by-sa/4.0/","title":" Fix Scipy lib not found Issue:"},{"location":"standalone/ColorspaceConvert/features/","text":"Features \u00b6 Inputs and Outputs \u00b6 List of Input formats supported .exr .png .jpg .jpeg .tiff .hdr .tx Warning Single-channel maps are not supported. List of Output formats supported Format Bitdepth .exr 16 Half, 32 Float .jpg 8 Int .png 8 Int, 16 Int What is the behaviour of the export checkable circles ? Export in a new folder: The file will be placed in a new folder named \"ACEScg\" located at the same location of the original file if no path is given. Else the output files will be placed in the given folder path. Export at the same location: a new file prefixed with the target colorspace or the ODT/Tf will be created. Danger All outputs are cropped to RGBA (if alpha supported) channels. So if you input multi-channel exrs and output exrs, you will lose all your other channels. Danger Mipmapping is not supported for output. You can input mipmapped exr/tiff/tx but the output will loose its mipmapping. Compression When choosing the compression amount remember that for jpg 100 means less compression while it is the inverse for exrs. Importing folders When drag&dropping a folder, all the files inside it and its sub-directories will be added! IDT \u00b6 IDTs allow to specify to which colorspace your file primaries belongs too but also which transfer-function is applied to your file. Utility - Raw : specify that you don't want any conversion. It can be usefull if you just want to switch the format of a file. Utility - Texture - rec709 : if your file has sRGB/rec709 primaries with a gamma2.2 transfer function applied. \u200b ODT/Transfer Functions \u00b6 Availability The ODT / Transfer Function dropdown is only available when the Output format is set to a integer format (.jpg or .png) ACES ODTs ( prefixed with (ACES) ) are only available when the Target ColorSpace is set to ACEScg Converter \u00b6 Depending on your export options and your input file size, the converting process can become very slow. Applying an ACES ODT is the slowest operation. Colorspaces conversion are processed with a Bradford chromatic adaptation. Shortcuts \u00b6 Ctrl + A : Select all file in the list Del : remove a file (no undo) Backspace : remove a file (no undo) You can also use the directionnal arrow to navigate in the list and shift to select items. Logging \u00b6 You can find the log file here: yourdocumentspath/PYCO/ColorSpaceConverter/log_file.log You can also open it by clicking on the \"log\" Icon in the UI.","title":"Features"},{"location":"standalone/ColorspaceConvert/features/#features","text":"","title":" Features"},{"location":"standalone/ColorspaceConvert/features/#inputs-and-outputs","text":"List of Input formats supported .exr .png .jpg .jpeg .tiff .hdr .tx Warning Single-channel maps are not supported. List of Output formats supported Format Bitdepth .exr 16 Half, 32 Float .jpg 8 Int .png 8 Int, 16 Int What is the behaviour of the export checkable circles ? Export in a new folder: The file will be placed in a new folder named \"ACEScg\" located at the same location of the original file if no path is given. Else the output files will be placed in the given folder path. Export at the same location: a new file prefixed with the target colorspace or the ODT/Tf will be created. Danger All outputs are cropped to RGBA (if alpha supported) channels. So if you input multi-channel exrs and output exrs, you will lose all your other channels. Danger Mipmapping is not supported for output. You can input mipmapped exr/tiff/tx but the output will loose its mipmapping. Compression When choosing the compression amount remember that for jpg 100 means less compression while it is the inverse for exrs. Importing folders When drag&dropping a folder, all the files inside it and its sub-directories will be added!","title":" Inputs and Outputs"},{"location":"standalone/ColorspaceConvert/features/#idt","text":"IDTs allow to specify to which colorspace your file primaries belongs too but also which transfer-function is applied to your file. Utility - Raw : specify that you don't want any conversion. It can be usefull if you just want to switch the format of a file. Utility - Texture - rec709 : if your file has sRGB/rec709 primaries with a gamma2.2 transfer function applied. \u200b","title":" IDT"},{"location":"standalone/ColorspaceConvert/features/#odttransfer-functions","text":"Availability The ODT / Transfer Function dropdown is only available when the Output format is set to a integer format (.jpg or .png) ACES ODTs ( prefixed with (ACES) ) are only available when the Target ColorSpace is set to ACEScg","title":" ODT/Transfer Functions"},{"location":"standalone/ColorspaceConvert/features/#converter","text":"Depending on your export options and your input file size, the converting process can become very slow. Applying an ACES ODT is the slowest operation. Colorspaces conversion are processed with a Bradford chromatic adaptation.","title":" Converter"},{"location":"standalone/ColorspaceConvert/features/#shortcuts","text":"Ctrl + A : Select all file in the list Del : remove a file (no undo) Backspace : remove a file (no undo) You can also use the directionnal arrow to navigate in the list and shift to select items.","title":" Shortcuts"},{"location":"standalone/ColorspaceConvert/features/#logging","text":"You can find the log file here: yourdocumentspath/PYCO/ColorSpaceConverter/log_file.log You can also open it by clicking on the \"log\" Icon in the UI.","title":"Logging"},{"location":"standalone/ColorspaceConvert/home/","text":"PYCO Image Colorspace Converter \u00b6 Quickly switch colorspaces and file format for your textures, hdris, ... Get the app Download the app here: https://gum.co/pycocs About \u00b6 This utility is targeted at VFX/Animation artists for use in converting input images to a designated target color space. It includes export options such as file format, bit depth, and others. The app only works with 2d images for now. Known limitations & bugs Performance can become very bad with ACES ODTs. Running the app as administrator on Windows will disable drag & drop Converting tiff to png or even using png can cause errors. logging system is actually a joke so doesn't except much from it. CONTRIBUTORS \u00b6 Development made possible thanks to ColorScience Package Fredrik Averpil's and Sidney Guenther's work Material Design Icons OpenImage IO Thibault Houdon Formations Special Thanks to: Documentation revision: J\u00f8rgen Herland , kn9 , Douglas Bischoff Beta testing: Muhammed Hamed , Valentin Nicolini , J\u00f8rgen Herland , Douglas Bischoff , Chris Brejon What's next ? \u00b6 I find the app very basic for now and I suggested some new feature like .tx baking in the past. But I run into the dilemna of improving the current application based on a wobbly code or re-writing a fresh new application with solid foundations to build bigger things.Unfortunately i'm in in a period with not a lot of time which make the choice difficult. Anyway doesn't except new update for this app, but maybe a new, bigger one in a year","title":"Home"},{"location":"standalone/ColorspaceConvert/home/#pyco-image-colorspace-converter","text":"Quickly switch colorspaces and file format for your textures, hdris, ... Get the app Download the app here: https://gum.co/pycocs","title":"PYCO Image Colorspace Converter"},{"location":"standalone/ColorspaceConvert/home/#about","text":"This utility is targeted at VFX/Animation artists for use in converting input images to a designated target color space. It includes export options such as file format, bit depth, and others. The app only works with 2d images for now. Known limitations & bugs Performance can become very bad with ACES ODTs. Running the app as administrator on Windows will disable drag & drop Converting tiff to png or even using png can cause errors. logging system is actually a joke so doesn't except much from it.","title":" About"},{"location":"standalone/ColorspaceConvert/home/#contributors","text":"Development made possible thanks to ColorScience Package Fredrik Averpil's and Sidney Guenther's work Material Design Icons OpenImage IO Thibault Houdon Formations Special Thanks to: Documentation revision: J\u00f8rgen Herland , kn9 , Douglas Bischoff Beta testing: Muhammed Hamed , Valentin Nicolini , J\u00f8rgen Herland , Douglas Bischoff , Chris Brejon","title":" CONTRIBUTORS"},{"location":"standalone/ColorspaceConvert/home/#whats-next","text":"I find the app very basic for now and I suggested some new feature like .tx baking in the past. But I run into the dilemna of improving the current application based on a wobbly code or re-writing a fresh new application with solid foundations to build bigger things.Unfortunately i'm in in a period with not a lot of time which make the choice difficult. Anyway doesn't except new update for this app, but maybe a new, bigger one in a year","title":" What's next ?"},{"location":"standalone/ColorspaceConvert/linux/","text":"Running the app on Linux \u00b6 These explanations were written by @RafaelMoco , huge thanks to him for this. If you have any question I won't be able to help as i'm not using Linux myself. creating the 64bits Prefix \u00b6 To run PYCO Image Colorspace Converter on Linux, you will need to have the last version of Wine installed on your computer. After that, you will need to create a 64bits Prefix, since PYCO Image Colorspace Converter only runs on that platform. The easiest way to do it is with Q4Wine. For that, just follow these steps: On the Prefixes Tab, click on the first menu button naming the 64bits Prefix \u00b6 Now, choose a name for your new prefix. You can put any name, but it's a good idea to create something easy to identify as your 64 bits prefix, something like \"Wine64\". The most important option is Architecture. Here, you need to choose \"win64\". Click Ok running the app \u00b6 To run PYCO Image Colorspace Converter with your new 64Bits Prefix, just click in File > Run and on the new window, choose the .exe file you want to run in the Program chooser, and don't forget to choose your 64Bits prefix under the Name option Click ok and that's it!","title":"For Linux"},{"location":"standalone/ColorspaceConvert/linux/#running-the-app-on-linux","text":"These explanations were written by @RafaelMoco , huge thanks to him for this. If you have any question I won't be able to help as i'm not using Linux myself.","title":"Running the app on Linux"},{"location":"standalone/ColorspaceConvert/linux/#creating-the-64bits-prefix","text":"To run PYCO Image Colorspace Converter on Linux, you will need to have the last version of Wine installed on your computer. After that, you will need to create a 64bits Prefix, since PYCO Image Colorspace Converter only runs on that platform. The easiest way to do it is with Q4Wine. For that, just follow these steps: On the Prefixes Tab, click on the first menu button","title":"creating the 64bits Prefix"},{"location":"standalone/ColorspaceConvert/linux/#naming-the-64bits-prefix","text":"Now, choose a name for your new prefix. You can put any name, but it's a good idea to create something easy to identify as your 64 bits prefix, something like \"Wine64\". The most important option is Architecture. Here, you need to choose \"win64\". Click Ok","title":"naming the 64bits Prefix"},{"location":"standalone/ColorspaceConvert/linux/#running-the-app","text":"To run PYCO Image Colorspace Converter with your new 64Bits Prefix, just click in File > Run and on the new window, choose the .exe file you want to run in the Program chooser, and don't forget to choose your 64Bits prefix under the Name option Click ok and that's it!","title":"running the app"},{"location":"standalone/ColorspaceConvert/startguide/","text":"GETTING STARTED \u00b6 Think to also read the Features page Installation \u00b6 Pyco Colorspace can be downloaded here: https://gum.co/pycocs Choose the package to download depending on the OS you are on. You can then extract the zip you got and inside the application folder and open the .exe ACES Workflow Reminder: Reminder that in an ACES workflow, only the color maps need to be converted. This means maps that hold color values displayed in the render image. (a Normal map is not a color map but a scalar/data map). Import files \u00b6 You can simply drag & drop any supported file(s) or even just a folder. You can also click on the folder icon to open files through your OS explorer. When dragging a folder all the files inside it and its sub-directories will be added! To delete a file you can simply select it and press Del or Backspace . Set the IDT \u00b6 The IDT (Input Device Transform) specifies the input file colorspace primaries, white point and transfer-function. For example Utility-sRGB-Texture specifies that the file has sRGB primaries with the sRGB EOTF transfer function while Utility-sRGB-Linear specifies that the transfer function is Linear To apply an IDT to the desired files: Select one or multiple files in the list (shift+click) Select the desired IDT in the dropdown menu. Click on Apply to Selection / Apply to All (No selection is needed for this one) You can also click & drag down/up to select multiple files quickly in the list. Change Output options \u00b6 Select the colorspace to convert file primaries to in the dropdown. \u00b6 If the IDT and Target Colorspace are the same no conversion will happen. Select your output format: \u00b6 exr The professional-grade image storage format of the motion picture industry to be used in your 3D applications for input such as textures, HDRIs, etc but not for your final displayable-delivery-content. jpg, png Low dynamic range displayable file formats suitable for online-view , previews, thumbnails, etc. A Transfer-function / ODT is required to be applied. Select your bitdepth (output format dependent) \u00b6 Warning When converting HDRIs it is recommended to output a 32bit Float file to not clip any values Pick your compression method (exr only) \u00b6 None: No compression, for archive files mostly. Or if you need maximum reading speed. PIZ: (lossless) Same speed for decompression/compression. Best for scan-line based files. Zip: (lossless) faster decompression and slower compression than PIZ. Best for textures. Zips: (lossless) Same, but can be write/read faster in some software. Dwaa: (lossy) Produce very light files (default compression amount: 45) Dwab: (lossy) Same as above, but can generate faster result in some applications. B44: (lossy) Only for HALF-Float images. Best for real-time playback of image sequence. Read more about this here: https://www.exr-io.com/openexr-data-compression/ . Set the compression amount (output format & compression method dependent) \u00b6 jpg: 100 = Max Quality; 0 = Minimum quality, but light files exr(dwaa/dwaab): 0 means Max quality Select your output location option. \u00b6 Refer to the Features page. Start The Conversion \u00b6 Click on the green \"play\" button in the toolbar to start converting. When a file is converted, it will be removed from the list. If you click on \"Abort\", the currently converted files will still be converted. Some Examples \u00b6 Importing a 3d render in .exr, rendered with ACEScg primaries and applying an ODT for sharing on Internet: IDT : ACEScg ; TargetColorSpace : ACEScg ; Output format : .jpg ; Compression : 100 (max quality) ; ODT : sRGB(ACES) Importing a albedo texture in .exr from Megascans (sRGB primaries) and convert it to ACEScg IDT : Utility - Linear- sRGB ; TargetColorSpace : ACEScg ; Output format : .exr; BitDepth : 16b Half-Float; Compression : zip;","title":"Getting started"},{"location":"standalone/ColorspaceConvert/startguide/#getting-started","text":"Think to also read the Features page","title":" GETTING STARTED"},{"location":"standalone/ColorspaceConvert/startguide/#installation","text":"Pyco Colorspace can be downloaded here: https://gum.co/pycocs Choose the package to download depending on the OS you are on. You can then extract the zip you got and inside the application folder and open the .exe ACES Workflow Reminder: Reminder that in an ACES workflow, only the color maps need to be converted. This means maps that hold color values displayed in the render image. (a Normal map is not a color map but a scalar/data map).","title":" Installation"},{"location":"standalone/ColorspaceConvert/startguide/#import-files","text":"You can simply drag & drop any supported file(s) or even just a folder. You can also click on the folder icon to open files through your OS explorer. When dragging a folder all the files inside it and its sub-directories will be added! To delete a file you can simply select it and press Del or Backspace .","title":" Import files"},{"location":"standalone/ColorspaceConvert/startguide/#set-the-idt","text":"The IDT (Input Device Transform) specifies the input file colorspace primaries, white point and transfer-function. For example Utility-sRGB-Texture specifies that the file has sRGB primaries with the sRGB EOTF transfer function while Utility-sRGB-Linear specifies that the transfer function is Linear To apply an IDT to the desired files: Select one or multiple files in the list (shift+click) Select the desired IDT in the dropdown menu. Click on Apply to Selection / Apply to All (No selection is needed for this one) You can also click & drag down/up to select multiple files quickly in the list.","title":" Set the IDT"},{"location":"standalone/ColorspaceConvert/startguide/#change-output-options","text":"","title":" Change Output options"},{"location":"standalone/ColorspaceConvert/startguide/#select-the-colorspace-to-convert-file-primaries-to-in-the-dropdown","text":"If the IDT and Target Colorspace are the same no conversion will happen.","title":" Select the colorspace to convert file primaries to in the dropdown."},{"location":"standalone/ColorspaceConvert/startguide/#select-your-output-format","text":"exr The professional-grade image storage format of the motion picture industry to be used in your 3D applications for input such as textures, HDRIs, etc but not for your final displayable-delivery-content. jpg, png Low dynamic range displayable file formats suitable for online-view , previews, thumbnails, etc. A Transfer-function / ODT is required to be applied.","title":" Select your output format:"},{"location":"standalone/ColorspaceConvert/startguide/#select-your-bitdepth-output-format-dependent","text":"Warning When converting HDRIs it is recommended to output a 32bit Float file to not clip any values","title":" Select your bitdepth (output format dependent)"},{"location":"standalone/ColorspaceConvert/startguide/#pick-your-compression-method-exr-only","text":"None: No compression, for archive files mostly. Or if you need maximum reading speed. PIZ: (lossless) Same speed for decompression/compression. Best for scan-line based files. Zip: (lossless) faster decompression and slower compression than PIZ. Best for textures. Zips: (lossless) Same, but can be write/read faster in some software. Dwaa: (lossy) Produce very light files (default compression amount: 45) Dwab: (lossy) Same as above, but can generate faster result in some applications. B44: (lossy) Only for HALF-Float images. Best for real-time playback of image sequence. Read more about this here: https://www.exr-io.com/openexr-data-compression/ .","title":"  Pick your compression method (exr only)"},{"location":"standalone/ColorspaceConvert/startguide/#set-the-compression-amount-output-format-compression-method-dependent","text":"jpg: 100 = Max Quality; 0 = Minimum quality, but light files exr(dwaa/dwaab): 0 means Max quality","title":" Set the compression amount (output format &amp; compression method dependent)"},{"location":"standalone/ColorspaceConvert/startguide/#select-your-output-location-option","text":"Refer to the Features page.","title":" Select your output location option."},{"location":"standalone/ColorspaceConvert/startguide/#start-the-conversion","text":"Click on the green \"play\" button in the toolbar to start converting. When a file is converted, it will be removed from the list. If you click on \"Abort\", the currently converted files will still be converted.","title":" Start The Conversion"},{"location":"standalone/ColorspaceConvert/startguide/#some-examples","text":"Importing a 3d render in .exr, rendered with ACEScg primaries and applying an ODT for sharing on Internet: IDT : ACEScg ; TargetColorSpace : ACEScg ; Output format : .jpg ; Compression : 100 (max quality) ; ODT : sRGB(ACES) Importing a albedo texture in .exr from Megascans (sRGB primaries) and convert it to ACEScg IDT : Utility - Linear- sRGB ; TargetColorSpace : ACEScg ; Output format : .exr; BitDepth : 16b Half-Float; Compression : zip;","title":" Some Examples"},{"location":"standalone/EXRTools/development/","text":"Reg files \u00b6 Here is a post i made that could help you if you want to manually create/edit a .reg file: https://www.notion.so/liamcollod/Creating-a-context-menu-with-sub-menu-for-Windows-for-a-specific-file-extension-61d5a0d696ed4b1db52f043656f936d6 If you want to create your own keys and sub-menus keep in mind that you are limited to 16keys max included the sub-keys (that's why I have 2 keys for this tool). If you know how to use python i have published on my github the py file i used to create the reg file in this tool: https://github.com/MrLixm/Reg-file-creator","title":"Development"},{"location":"standalone/EXRTools/development/#reg-files","text":"Here is a post i made that could help you if you want to manually create/edit a .reg file: https://www.notion.so/liamcollod/Creating-a-context-menu-with-sub-menu-for-Windows-for-a-specific-file-extension-61d5a0d696ed4b1db52f043656f936d6 If you want to create your own keys and sub-menus keep in mind that you are limited to 16keys max included the sub-keys (that's why I have 2 keys for this tool). If you know how to use python i have published on my github the py file i used to create the reg file in this tool: https://github.com/MrLixm/Reg-file-creator","title":"Reg files"},{"location":"standalone/EXRTools/features/","text":"Features \u00b6 Context menu \u00b6 By default the application is copied to your Documents location in a PYCO/EXRTools folder. If modifying the installer settings to uninstall the keys doesn't work you can open the registery editor and delete the PYCO keys in HKEY_CLASSES_ROOT\\SystemFileAssociations\\.exr Command Line Interface \u00b6 This section describe the feature of the CLI application. Structure: \"pathto/EXRTools.exe\" command arguments [ Options ] Command list \u00b6 exr-swap-resize command \u00b6 Resize an exr to the given resolution (1:1 ratio). The input exr is renamed wil the OLD_ prefix and the resized version is renamed like the original. \"pathto/EXRTools.exe\" exr-swap-resize EXR_FILE RESOLUTION [ Options ] Arguments: (str)EXR_FILE is the path to the exr. (int)RESOLUTION is the resolution in pixels to resize the map to. ex: 2048 Options: --revert \u00b6 Revert the resize operation by deleting the resize result and renaming the original image (remove OLD_ prefix) --auto_close \u00b6 Command shelf self close at the end of the process if specified. (instead of asking the user to press a key to close) Warning These methods will crop any input to RGBA only. exr-resize command \u00b6 Resize an exr to the given resolution (1:1 ratio). \"pathto/EXRTools.exe\" exr-resize EXR_FILE RESOLUTION [ Options ] Arguments: (str)EXR_FILE is the path to the exr. (int)RESOLUTION is the resolution in pixels to resize the map to. ex: 2048 Options: --out_path \u00b6 Specify an output path for the converted exr (with filename.exr). By default the resized version is created at the same location of the original. --suffix \u00b6 Specify the suffix on the file name when --out_path is not specified. The default one is based on the resolution. --auto_close \u00b6 Command shelf self close at the end of the process if specified. (instead of asking the user to press a key to close) Warning These methods will crop any input to RGBA only. exr-to-mpart command \u00b6 Convert a multi-channel exr to a multi-part one \"pathto/EXRTools.exe\" exr-to-mpart EXR_FILE [ Options ] Arguments: (str)EXR_FILE is the path to the exr. Options: --out_path \u00b6 Specify an output path for the converted exr (with filename.exr). By default the multi-part version is created at the same location of the original. --write_mode \u00b6 Specify a write mode for the exr, which is by default scanlines . Write modes available are : scanlines tiles:tiles_width,tile_height tiles size must be specified after a colon, separated by a comma. image write the whole image at once (very slow) --suffix \u00b6 Specify the suffix on the file name when --out_path is not specified. The default one is _mpart --auto_close \u00b6 Command shelf self close at the end of the process if specified. (instead of asking the user to press a key to close) Info The more you have layers(AOV/light group) in your original exr, the more time it will take to convert it to a multi-part exr. exr-info command \u00b6 Return useful informations about the exr \"pathto/EXRTools.exe\" exr-info EXR_FILE [ Options ] Arguments: (str)EXR_FILE is the path to the exr. Options: --metadata \u00b6 Also display extra attribute in the file (metadata) --obly_metadata \u00b6 Display ONLY the extra attribute of the file (metadata) exr-recompress command \u00b6 Resize an exr to the given resolution (1:1 ratio). \"pathto/EXRTools.exe\" exr-recompress EXR_FILE COMPRESSION [ Options ] Arguments: (str)EXR_FILE is the path to the exr. (str)COMPRESSION is the compression method to use. Method available are none, rle, zip, zips, piz, pxr24, b44, b44a, dwaa, dwab If you are using dwaa or dwab you can specify the compression level after a colon. ex: dwaa:30 b44, b44a, pxr24 are made for HALF-Float images. b44a is supported for flat images (uniform colors) Options: --out_path \u00b6 Specify an output path for the converted exr (with filename.exr). By default the resized version is created at the same location of the original. --write_mode \u00b6 Specify a write mode for the exr, which is by default scanlines . Write modes available are : scanlines tiles:tiles_width,tile_height tiles size must be specified after a colon, separated by a comma. image write the whole image at once (very slow) --suffix \u00b6 Specify the suffix on the file name when --out_path is not specified. The default one is based on the compression method. --auto_close \u00b6 Command shelf self close at the end of the process if specified. (instead of asking the user to press a key to close) Info If you submit a multi-part exr all the parts are going to be recompressed to the same given compression. Known Issues If some erros happens during the process, the script will try to delete the potential created file but will fail.","title":"Features"},{"location":"standalone/EXRTools/features/#features","text":"","title":" Features"},{"location":"standalone/EXRTools/features/#context-menu","text":"By default the application is copied to your Documents location in a PYCO/EXRTools folder. If modifying the installer settings to uninstall the keys doesn't work you can open the registery editor and delete the PYCO keys in HKEY_CLASSES_ROOT\\SystemFileAssociations\\.exr","title":"Context menu"},{"location":"standalone/EXRTools/features/#command-line-interface","text":"This section describe the feature of the CLI application. Structure: \"pathto/EXRTools.exe\" command arguments [ Options ]","title":"Command Line Interface"},{"location":"standalone/EXRTools/features/#command-list","text":"","title":" Command list"},{"location":"standalone/EXRTools/features/#exr-swap-resize-command","text":"Resize an exr to the given resolution (1:1 ratio). The input exr is renamed wil the OLD_ prefix and the resized version is renamed like the original. \"pathto/EXRTools.exe\" exr-swap-resize EXR_FILE RESOLUTION [ Options ] Arguments: (str)EXR_FILE is the path to the exr. (int)RESOLUTION is the resolution in pixels to resize the map to. ex: 2048 Options:","title":" exr-swap-resize command"},{"location":"standalone/EXRTools/features/#-revert","text":"Revert the resize operation by deleting the resize result and renaming the original image (remove OLD_ prefix)","title":"--revert"},{"location":"standalone/EXRTools/features/#-auto_close","text":"Command shelf self close at the end of the process if specified. (instead of asking the user to press a key to close) Warning These methods will crop any input to RGBA only.","title":"--auto_close"},{"location":"standalone/EXRTools/features/#exr-resize-command","text":"Resize an exr to the given resolution (1:1 ratio). \"pathto/EXRTools.exe\" exr-resize EXR_FILE RESOLUTION [ Options ] Arguments: (str)EXR_FILE is the path to the exr. (int)RESOLUTION is the resolution in pixels to resize the map to. ex: 2048 Options:","title":" exr-resize command"},{"location":"standalone/EXRTools/features/#-out_path","text":"Specify an output path for the converted exr (with filename.exr). By default the resized version is created at the same location of the original.","title":"--out_path"},{"location":"standalone/EXRTools/features/#-suffix","text":"Specify the suffix on the file name when --out_path is not specified. The default one is based on the resolution.","title":"--suffix"},{"location":"standalone/EXRTools/features/#-auto_close_1","text":"Command shelf self close at the end of the process if specified. (instead of asking the user to press a key to close) Warning These methods will crop any input to RGBA only.","title":"--auto_close"},{"location":"standalone/EXRTools/features/#exr-to-mpart-command","text":"Convert a multi-channel exr to a multi-part one \"pathto/EXRTools.exe\" exr-to-mpart EXR_FILE [ Options ] Arguments: (str)EXR_FILE is the path to the exr. Options:","title":" exr-to-mpart command"},{"location":"standalone/EXRTools/features/#-out_path_1","text":"Specify an output path for the converted exr (with filename.exr). By default the multi-part version is created at the same location of the original.","title":"--out_path"},{"location":"standalone/EXRTools/features/#-write_mode","text":"Specify a write mode for the exr, which is by default scanlines . Write modes available are : scanlines tiles:tiles_width,tile_height tiles size must be specified after a colon, separated by a comma. image write the whole image at once (very slow)","title":"--write_mode"},{"location":"standalone/EXRTools/features/#-suffix_1","text":"Specify the suffix on the file name when --out_path is not specified. The default one is _mpart","title":"--suffix"},{"location":"standalone/EXRTools/features/#-auto_close_2","text":"Command shelf self close at the end of the process if specified. (instead of asking the user to press a key to close) Info The more you have layers(AOV/light group) in your original exr, the more time it will take to convert it to a multi-part exr.","title":"--auto_close"},{"location":"standalone/EXRTools/features/#exr-info-command","text":"Return useful informations about the exr \"pathto/EXRTools.exe\" exr-info EXR_FILE [ Options ] Arguments: (str)EXR_FILE is the path to the exr. Options:","title":" exr-info command"},{"location":"standalone/EXRTools/features/#-metadata","text":"Also display extra attribute in the file (metadata)","title":"--metadata"},{"location":"standalone/EXRTools/features/#-obly_metadata","text":"Display ONLY the extra attribute of the file (metadata)","title":"--obly_metadata"},{"location":"standalone/EXRTools/features/#exr-recompress-command","text":"Resize an exr to the given resolution (1:1 ratio). \"pathto/EXRTools.exe\" exr-recompress EXR_FILE COMPRESSION [ Options ] Arguments: (str)EXR_FILE is the path to the exr. (str)COMPRESSION is the compression method to use. Method available are none, rle, zip, zips, piz, pxr24, b44, b44a, dwaa, dwab If you are using dwaa or dwab you can specify the compression level after a colon. ex: dwaa:30 b44, b44a, pxr24 are made for HALF-Float images. b44a is supported for flat images (uniform colors) Options:","title":" exr-recompress command"},{"location":"standalone/EXRTools/features/#-out_path_2","text":"Specify an output path for the converted exr (with filename.exr). By default the resized version is created at the same location of the original.","title":"--out_path"},{"location":"standalone/EXRTools/features/#-write_mode_1","text":"Specify a write mode for the exr, which is by default scanlines . Write modes available are : scanlines tiles:tiles_width,tile_height tiles size must be specified after a colon, separated by a comma. image write the whole image at once (very slow)","title":"--write_mode"},{"location":"standalone/EXRTools/features/#-suffix_2","text":"Specify the suffix on the file name when --out_path is not specified. The default one is based on the compression method.","title":"--suffix"},{"location":"standalone/EXRTools/features/#-auto_close_3","text":"Command shelf self close at the end of the process if specified. (instead of asking the user to press a key to close) Info If you submit a multi-part exr all the parts are going to be recompressed to the same given compression. Known Issues If some erros happens during the process, the script will try to delete the potential created file but will fail.","title":"--auto_close"},{"location":"standalone/EXRTools/home/","text":"EXR Tools for Windows \u00b6 THIS APP IS IN DEVELOPEMENT AND NOT RELEASED YET \u00b6 Get the app Download the app here: https://gum.co/exrtools This tool is composed of a command line application and an installer to create a right click context menu for EXR files. It allow you to perform various operation such as resizing, changing compression method, displaying infos, ... This tool includes a command line interface application, which means no real interface to interact with but lines of commands. Please refer to the startguide for having an explanation of how to use it if you never used CLI(command line interface). Some features \u00b6 Resizing \u00b6 There is two method for resizing exrs, swap-resize and resize. Swap resize was made to perform optimisation on existing textures in a production. It will resize the existing texture, rename the original with a prefix so it can be reversed, and rename the resized version with the same name as the original. Thus, you can quickly resize texture used in your DCC without having to update the path. Resize is the traditionnal resize that will create a new exr resized to the given dimensions. Both method strictly resize to a 1x1 ratio and were designed mainly for textures in mind. Multi-channel to Multi-part \u00b6 When rendering you have the option to include some AOVs in the same exr file. This is usually referred a multi-layer EXR, where a single exr holds multiples images. Where the thing get interesting is that there is actually two types of EXR that can hold multiples \"images\". The multi-channel one consists of creating as much channel as you need for each image, so for example if you display the channels of a multi-channel EXR you will have something like that: ('R', 'G', 'B', 'A', 'Z', 'Diffuse.R', 'Diffuse.G', 'Diffuse.B', 'Emission.R', 'Emission.G', 'Emission.B', 'GIRaw.R', 'GIRaw.G', 'GIRaw.B') At the beginning of the existence of the EXR format this was the only method available, now that the other one exists this method produce EXR that are much slower to read (it depends of the number of channels). The multi-part one is like having multiple images(refered as parts or sub-images) in one single file. When opened, only the desired part is read which product faster read result than the multi-channel method. You can use the Display Info functions to see if your exr is multi-part or multi-channel. Recompress \u00b6 EXR offer different methods of compression divided into lossless or lossy. From the official documentation( https://www.openexr.com/documentation/TechnicalIntroduction.pdf ): Compressing an image with a lossless method preserves the image exactly; the pixel data are not altered. Compressing an image with a lossy method preserves the image only approximately; the compressed image looks like the original, but the data in the pixels may have changed slightly. No matter if it's a multi-part or multi-channel EXR you will be able to change the compression of the whole file with this tool. Available: none, rle, zip, zips, piz, pxr24, b44, b44a, dwaa, dwab Display Informations \u00b6 Quickly display informations about the exr including metadata. Exemple for a multi-channel render: CONTRIBUTORS \u00b6 Development made possible thanks to Fredrik Averpil's and Sidney Guenther's work Material Design Icons OpenImage IO Thibault Houdon Formations","title":"Home"},{"location":"standalone/EXRTools/home/#exr-tools-for-windows","text":"","title":"EXR Tools for Windows"},{"location":"standalone/EXRTools/home/#this-app-is-in-developement-and-not-released-yet","text":"Get the app Download the app here: https://gum.co/exrtools This tool is composed of a command line application and an installer to create a right click context menu for EXR files. It allow you to perform various operation such as resizing, changing compression method, displaying infos, ... This tool includes a command line interface application, which means no real interface to interact with but lines of commands. Please refer to the startguide for having an explanation of how to use it if you never used CLI(command line interface).","title":"THIS APP IS IN DEVELOPEMENT AND NOT RELEASED YET"},{"location":"standalone/EXRTools/home/#some-features","text":"","title":"Some features"},{"location":"standalone/EXRTools/home/#resizing","text":"There is two method for resizing exrs, swap-resize and resize. Swap resize was made to perform optimisation on existing textures in a production. It will resize the existing texture, rename the original with a prefix so it can be reversed, and rename the resized version with the same name as the original. Thus, you can quickly resize texture used in your DCC without having to update the path. Resize is the traditionnal resize that will create a new exr resized to the given dimensions. Both method strictly resize to a 1x1 ratio and were designed mainly for textures in mind.","title":" Resizing"},{"location":"standalone/EXRTools/home/#multi-channel-to-multi-part","text":"When rendering you have the option to include some AOVs in the same exr file. This is usually referred a multi-layer EXR, where a single exr holds multiples images. Where the thing get interesting is that there is actually two types of EXR that can hold multiples \"images\". The multi-channel one consists of creating as much channel as you need for each image, so for example if you display the channels of a multi-channel EXR you will have something like that: ('R', 'G', 'B', 'A', 'Z', 'Diffuse.R', 'Diffuse.G', 'Diffuse.B', 'Emission.R', 'Emission.G', 'Emission.B', 'GIRaw.R', 'GIRaw.G', 'GIRaw.B') At the beginning of the existence of the EXR format this was the only method available, now that the other one exists this method produce EXR that are much slower to read (it depends of the number of channels). The multi-part one is like having multiple images(refered as parts or sub-images) in one single file. When opened, only the desired part is read which product faster read result than the multi-channel method. You can use the Display Info functions to see if your exr is multi-part or multi-channel.","title":" Multi-channel to Multi-part"},{"location":"standalone/EXRTools/home/#recompress","text":"EXR offer different methods of compression divided into lossless or lossy. From the official documentation( https://www.openexr.com/documentation/TechnicalIntroduction.pdf ): Compressing an image with a lossless method preserves the image exactly; the pixel data are not altered. Compressing an image with a lossy method preserves the image only approximately; the compressed image looks like the original, but the data in the pixels may have changed slightly. No matter if it's a multi-part or multi-channel EXR you will be able to change the compression of the whole file with this tool. Available: none, rle, zip, zips, piz, pxr24, b44, b44a, dwaa, dwab","title":"Recompress"},{"location":"standalone/EXRTools/home/#display-informations","text":"Quickly display informations about the exr including metadata. Exemple for a multi-channel render:","title":" Display Informations"},{"location":"standalone/EXRTools/home/#contributors","text":"Development made possible thanks to Fredrik Averpil's and Sidney Guenther's work Material Design Icons OpenImage IO Thibault Houdon Formations","title":" CONTRIBUTORS"},{"location":"standalone/EXRTools/startguide/","text":"START GUIDE \u00b6 Get the app Download the app here: https://gum.co/exrtools Installation \u00b6 Just unzip the file you downloaded and put the folder anywhere you want. To install the Right-click context-menu follow the steps bellow. Be carefull as you need to have the administrator rights on your pc to install it. (it needs to create keys in the registery editor) Settings (for the context-menu) \u00b6 Next to the ...INSTALLER.exe you will find an installer_settings.json . This file will be used by the installer to determine some settings. You can modify it to change the default behavior of the installer.(Json file can be easily opened in any text editor) Options: auto_close: true or false true to make the app auto close the command shell once finished auto_run_reg: true or false true to auto run the registery file once this one has been created install_path: null or string null to have the default installation path in your documents else you can enter a custom path as: \"E:/Softwares/Tools\" for exemple. Think to use / or \\\\ and not \\ in the path ! remove_keys: true or false Kind of \"uninstall\", it will remove the keys from the registery so the context menus will be deleted Warning be sur that you exactly natch the case as wrote in the documentation above. All lines except the last one must end with a comma , default text should looks like this: { \"auto_close\" : true , \"auto_run_reg\" : true , \"install_path\" : null , \"remove_keys\" : false } Installer \u00b6 When you have modified your settings as you want or the default ones are just good you can run the INSTALLER.exe file. If you didn't set auto_run_reg to false: The registry editor will ask you if it can modify stuff, say yes. Actually if you didn't set by default the reg file to be opened with the registery editor it will be probably opened in the text editor. To solve this go to Documents/PYCO/EXRTools right click on the .reg file and choose to open with the registery editor Then a warning message that you can also confirm. Finally you have a success message to confirm addition of the keys. If you set auto_run_reg to false: The default installation directory will be in your Documents/PYCO/EXRTools folder (if you didn't change it) Inside you will find a .reg file that you can choose to run or to modify (see development ). Aaand you'r good, then right click on any exr to see if the context menus appear. Utilisation \u00b6 Right click context menu \u00b6 I think the right click menu is pretty explicit in what it does. If you still have some doubts on what it does you can read the home page Command line interface \u00b6 This application is Command Line based, it means if you try to just open the .exe, nothing will happens. You need to execute the app from a command prompt by calling commands. Open the Windows command prompt (win+r type cmd and hits enter) First you need to get the path to the .exe so go where you saved the app, shift+rightclick on it -> copy as path Go back in the command prompt, paste the path (shift+inser)(the path must start and end with \"\" ) \"L:\\apps\\EXRTools.exe\" Enter the command you want to use (see features ), for this quick example we are going to use exr-resize \"L:\\apps\\EXRTools.exe\" exr-resize Get the path of the image you want to resize, and paste it after the command (as always with a space in between) \"L:\\apps\\EXRTools.exe\" exr-resize \"L:\\texture\\randomTexture.exr\" Now just enter the resolution you want to resize to \"L:\\apps\\EXRTools.exe\" exr-resize \"L:\\texture\\randomTexture.exr\" 1024 You can press Enter as all the required arguments are given, but for this exemple we are going to add the option --suffix . \"L:\\apps\\EXRTools.exe\" exr-resize \"L:\\texture\\randomTexture.exr\" 1024 --suffix = _resize1024 Press enter and wait for the converter to finish","title":"Getting started"},{"location":"standalone/EXRTools/startguide/#start-guide","text":"Get the app Download the app here: https://gum.co/exrtools","title":" START GUIDE"},{"location":"standalone/EXRTools/startguide/#installation","text":"Just unzip the file you downloaded and put the folder anywhere you want. To install the Right-click context-menu follow the steps bellow. Be carefull as you need to have the administrator rights on your pc to install it. (it needs to create keys in the registery editor)","title":" Installation"},{"location":"standalone/EXRTools/startguide/#settings-for-the-context-menu","text":"Next to the ...INSTALLER.exe you will find an installer_settings.json . This file will be used by the installer to determine some settings. You can modify it to change the default behavior of the installer.(Json file can be easily opened in any text editor) Options: auto_close: true or false true to make the app auto close the command shell once finished auto_run_reg: true or false true to auto run the registery file once this one has been created install_path: null or string null to have the default installation path in your documents else you can enter a custom path as: \"E:/Softwares/Tools\" for exemple. Think to use / or \\\\ and not \\ in the path ! remove_keys: true or false Kind of \"uninstall\", it will remove the keys from the registery so the context menus will be deleted Warning be sur that you exactly natch the case as wrote in the documentation above. All lines except the last one must end with a comma , default text should looks like this: { \"auto_close\" : true , \"auto_run_reg\" : true , \"install_path\" : null , \"remove_keys\" : false }","title":" Settings (for the context-menu)"},{"location":"standalone/EXRTools/startguide/#installer","text":"When you have modified your settings as you want or the default ones are just good you can run the INSTALLER.exe file. If you didn't set auto_run_reg to false: The registry editor will ask you if it can modify stuff, say yes. Actually if you didn't set by default the reg file to be opened with the registery editor it will be probably opened in the text editor. To solve this go to Documents/PYCO/EXRTools right click on the .reg file and choose to open with the registery editor Then a warning message that you can also confirm. Finally you have a success message to confirm addition of the keys. If you set auto_run_reg to false: The default installation directory will be in your Documents/PYCO/EXRTools folder (if you didn't change it) Inside you will find a .reg file that you can choose to run or to modify (see development ). Aaand you'r good, then right click on any exr to see if the context menus appear.","title":" Installer"},{"location":"standalone/EXRTools/startguide/#utilisation","text":"","title":" Utilisation"},{"location":"standalone/EXRTools/startguide/#right-click-context-menu","text":"I think the right click menu is pretty explicit in what it does. If you still have some doubts on what it does you can read the home page","title":"Right click context menu"},{"location":"standalone/EXRTools/startguide/#command-line-interface","text":"This application is Command Line based, it means if you try to just open the .exe, nothing will happens. You need to execute the app from a command prompt by calling commands. Open the Windows command prompt (win+r type cmd and hits enter) First you need to get the path to the .exe so go where you saved the app, shift+rightclick on it -> copy as path Go back in the command prompt, paste the path (shift+inser)(the path must start and end with \"\" ) \"L:\\apps\\EXRTools.exe\" Enter the command you want to use (see features ), for this quick example we are going to use exr-resize \"L:\\apps\\EXRTools.exe\" exr-resize Get the path of the image you want to resize, and paste it after the command (as always with a space in between) \"L:\\apps\\EXRTools.exe\" exr-resize \"L:\\texture\\randomTexture.exr\" Now just enter the resolution you want to resize to \"L:\\apps\\EXRTools.exe\" exr-resize \"L:\\texture\\randomTexture.exr\" 1024 You can press Enter as all the required arguments are given, but for this exemple we are going to add the option --suffix . \"L:\\apps\\EXRTools.exe\" exr-resize \"L:\\texture\\randomTexture.exr\" 1024 --suffix = _resize1024 Press enter and wait for the converter to finish","title":"Command line interface"},{"location":"standalone/PointerGamutCLI/features/","text":"Features \u00b6 Structure: \"pathto/pointerGamutCLI.exe\" command arguments [ Options ] Command list \u00b6 createpgmap command \u00b6 Create a map that show out of PG pixels as explain in the Home page. \"pathto/pointerGamutCLI.exe\" createpgmap INPUT_FILE_PATH OUTPUT_FILE_PATH [ Options ] Arguments: INPUT_FILE_PATH is the path to the image to generate the map from OUTPUT_FILE_PATH is the desired path (with the filename.ext) to the map that is going to be generated Options:(which are all optional except the colorspace one) --colorspace=string \u00b6 colorspace primaries of the file This argument should specify the colorspace primaries of your file. In case you also use the --linearize option it also precise which transfer function is used on your file. Examples of colorspaces available: ACEScg, sRGB, BT709, ADOBE_WIDE_GAMUT, ADOBE_RGB_1998, ACES2065-1 The whole list is available here: https://colour.readthedocs.io/en/develop/generated/colour.RGB_COLOURSPACES.html#colour.RGB_COLOURSPACES --linearize \u00b6 linearized the input based on the colorspace specified. The tool awaits for linear data , if you input an image with a transfer function applied, the linearize option will invert this transfer function to get linear data (the transfer function is determined by the colorspace argument you submitted). This is an internal operation that doesn't affect the original file . For example if you input a .jpg/.png you should use this option. --out_map_type=string \u00b6 Choose the type of map to output (heat, add) [default=heat] Heat will output a black map with pixels gamut that are not in the PG with a red color Add will just adds the above map onto the original file (that has been multiplied by 0.65 so this is normal if it looks darker) --tolerance=number \u00b6 How far from the pointer gamut you authorize the pixel values to be. [default=0] The range of this parameters is 0-1, but keep it very low. Something like is 0.08 is a good value if you want some margin. --layername=string \u00b6 Which layer you want to analyse, no matter if it is a multi-layer or a multi-part exr just enter the name of the layer you are interested (for this tool the albedo) --help \u00b6 display the help querylayers command \u00b6 Display all the channel of all the layer in the file (useful for multi-layers exr) Return the layer index + the channels it holds. You can get 2 result: \"multi-layer\" exr contains only one \"layer\"(subimage) but multiples channel. multi-part exr contains multiples subimages with each can contains multiple channels too If both case just get the name of the albedo channel for creating the pg map. \"pathto/pointerGamutCLI.exe\" querylayers FILE_PATH Arguments: FILE_PATH is the path of the file to query info from Inputs and Outputs \u00b6 List of Input formats supported .exr .png .jpg .jpeg .tiff .hdr .tx Warning Single-channel maps are not supported. Output This app has been made to output 8bit int jpg, trying to output an other format is possible but might not work.","title":"Features"},{"location":"standalone/PointerGamutCLI/features/#features","text":"Structure: \"pathto/pointerGamutCLI.exe\" command arguments [ Options ]","title":" Features"},{"location":"standalone/PointerGamutCLI/features/#command-list","text":"","title":" Command list"},{"location":"standalone/PointerGamutCLI/features/#createpgmap-command","text":"Create a map that show out of PG pixels as explain in the Home page. \"pathto/pointerGamutCLI.exe\" createpgmap INPUT_FILE_PATH OUTPUT_FILE_PATH [ Options ] Arguments: INPUT_FILE_PATH is the path to the image to generate the map from OUTPUT_FILE_PATH is the desired path (with the filename.ext) to the map that is going to be generated Options:(which are all optional except the colorspace one)","title":" createpgmap command"},{"location":"standalone/PointerGamutCLI/features/#-colorspacestring","text":"colorspace primaries of the file This argument should specify the colorspace primaries of your file. In case you also use the --linearize option it also precise which transfer function is used on your file. Examples of colorspaces available: ACEScg, sRGB, BT709, ADOBE_WIDE_GAMUT, ADOBE_RGB_1998, ACES2065-1 The whole list is available here: https://colour.readthedocs.io/en/develop/generated/colour.RGB_COLOURSPACES.html#colour.RGB_COLOURSPACES","title":"--colorspace=string"},{"location":"standalone/PointerGamutCLI/features/#-linearize","text":"linearized the input based on the colorspace specified. The tool awaits for linear data , if you input an image with a transfer function applied, the linearize option will invert this transfer function to get linear data (the transfer function is determined by the colorspace argument you submitted). This is an internal operation that doesn't affect the original file . For example if you input a .jpg/.png you should use this option.","title":"--linearize"},{"location":"standalone/PointerGamutCLI/features/#-out_map_typestring","text":"Choose the type of map to output (heat, add) [default=heat] Heat will output a black map with pixels gamut that are not in the PG with a red color Add will just adds the above map onto the original file (that has been multiplied by 0.65 so this is normal if it looks darker)","title":"--out_map_type=string"},{"location":"standalone/PointerGamutCLI/features/#-tolerancenumber","text":"How far from the pointer gamut you authorize the pixel values to be. [default=0] The range of this parameters is 0-1, but keep it very low. Something like is 0.08 is a good value if you want some margin.","title":"--tolerance=number"},{"location":"standalone/PointerGamutCLI/features/#-layernamestring","text":"Which layer you want to analyse, no matter if it is a multi-layer or a multi-part exr just enter the name of the layer you are interested (for this tool the albedo)","title":"--layername=string"},{"location":"standalone/PointerGamutCLI/features/#-help","text":"display the help","title":"--help"},{"location":"standalone/PointerGamutCLI/features/#querylayers-command","text":"Display all the channel of all the layer in the file (useful for multi-layers exr) Return the layer index + the channels it holds. You can get 2 result: \"multi-layer\" exr contains only one \"layer\"(subimage) but multiples channel. multi-part exr contains multiples subimages with each can contains multiple channels too If both case just get the name of the albedo channel for creating the pg map. \"pathto/pointerGamutCLI.exe\" querylayers FILE_PATH Arguments: FILE_PATH is the path of the file to query info from","title":" querylayers command"},{"location":"standalone/PointerGamutCLI/features/#inputs-and-outputs","text":"List of Input formats supported .exr .png .jpg .jpeg .tiff .hdr .tx Warning Single-channel maps are not supported. Output This app has been made to output 8bit int jpg, trying to output an other format is possible but might not work.","title":" Inputs and Outputs"},{"location":"standalone/PointerGamutCLI/home/","text":"Pointer's Gamut Checker CommandLineTool \u00b6 Get the app Download the app here: https://gum.co/pgtool [ PG will be used as an acronym for Pointer's Gamut ] This tool allow you to check if the gamut of pixels of a given image are in the Pointer's Gamut or not. Translation : Check if your textures(diffuse reflectance i.e albedo only) are physically correct. This is a command line tool, it means no interface to interact with. Please refer to the startguide for having an explanation of how to use it if you never used CLI(command line interface). The outputted result is an image of the same size as the original with red pixel representing the out-of-gamut ones, and black for the one in the PG. What is the Pointer's Gamut ? The Pointer\u2019s gamut is (an approximation of) the gamut of real surface colors as can be seen by the human eye, based on the research by Michael R. Pointer (1980). What this means is that every color that can be reflected by the surface of an object of any material is inside the Pointer\u2019s gamut. Pointer\u2019s gamut is defined for diffuse reflection (matte surface) -- from https://www.tftcentral.co.uk/articles/pointers_gamut.htm So what that it means for us 3d artist ? That using the PG you can tell if your albedo texture/aov is physically correct ! CONTRIBUTORS \u00b6 Development made possible thanks to ColorScience Package Fredrik Averpil's and Sidney Guenther's work Material Design Icons OpenImage IO Thibault Houdon Formations Chris Brejon that introduce me the idea of this tool and provided me an awesome support and documentation.","title":"Home"},{"location":"standalone/PointerGamutCLI/home/#pointers-gamut-checker-commandlinetool","text":"Get the app Download the app here: https://gum.co/pgtool [ PG will be used as an acronym for Pointer's Gamut ] This tool allow you to check if the gamut of pixels of a given image are in the Pointer's Gamut or not. Translation : Check if your textures(diffuse reflectance i.e albedo only) are physically correct. This is a command line tool, it means no interface to interact with. Please refer to the startguide for having an explanation of how to use it if you never used CLI(command line interface). The outputted result is an image of the same size as the original with red pixel representing the out-of-gamut ones, and black for the one in the PG. What is the Pointer's Gamut ? The Pointer\u2019s gamut is (an approximation of) the gamut of real surface colors as can be seen by the human eye, based on the research by Michael R. Pointer (1980). What this means is that every color that can be reflected by the surface of an object of any material is inside the Pointer\u2019s gamut. Pointer\u2019s gamut is defined for diffuse reflection (matte surface) -- from https://www.tftcentral.co.uk/articles/pointers_gamut.htm So what that it means for us 3d artist ? That using the PG you can tell if your albedo texture/aov is physically correct !","title":"Pointer's Gamut Checker CommandLineTool"},{"location":"standalone/PointerGamutCLI/home/#contributors","text":"Development made possible thanks to ColorScience Package Fredrik Averpil's and Sidney Guenther's work Material Design Icons OpenImage IO Thibault Houdon Formations Chris Brejon that introduce me the idea of this tool and provided me an awesome support and documentation.","title":" CONTRIBUTORS"},{"location":"standalone/PointerGamutCLI/startguide/","text":"START GUIDE \u00b6 Get the app Download the app here: https://gum.co/pgtool Installation \u00b6 Just unzip the file you downloaded and put the folder anywhere you want. The .exe is in the folder, there is a lot of file inside but compared to if i just packed everything into .exe, the current solution is much faster to run. Tutorial: create a Pointer's Gamut heat map for an image \u00b6 This application is Command Line based, it means if you try to just open the .exe, nothing will happens. You need to execute the app from a command prompt by calling commands. Open the Windows command prompt (win+r type cmd and hits enter) First you need to get the path to the .exe so go where you saved the app, shift+rightclick on it -> copy as path Go back in the command prompt, paste the path (shift+inser)(the path must start and end with \"\" ) \"L:\\apps\\PointerGamutCLTool_v1.exe\" Enter the command you want to use , in this case createpgmap \"L:\\apps\\PointerGamutCLTool_v1.exe\" createpgmap Get the path of the image you want to analyse, and paste it after the command (as always with a space in between) \"L:\\apps\\PointerGamutCLTool_v1.exe\" createpgmap \"L:\\texture\\randomTexture.exr\" Now enter the path of the output file (with also the name.ext) \"L:\\apps\\PointerGamutCLTool_v1.exe\" createpgmap \"L:\\texture\\randomTexture.exr\" \"L:\\texture\\texture_pgmap.jpg\" Enter the colorspace of the file --colorspace=sRGB (always with a space after the last argument wrote) Info This argument should specify the colorspace of your file. Examples of colorspaces available: ACEScg, sRGB, BT709, ADOBE_WIDE_GAMUT, ADOBE_RGB_1998, ACES_2065_1 If your file is not linear add --linearize that will linearize your file based on the colorspace specified. Please refer to the features page where this option is explained in detail. You can just assume: use this option for jpg/png/... , don't use it for .exr/... You can precise the tolerance amount you want by adding --tolerance=yourNumber which is by default 0. The range of this parameters is 0-1, but keep it very low. Something like is 0.08 is a good value if you want some margin. Tutorial: create a Pointer's Gamut heat map from a multi-layer/part exr \u00b6 Let's say that this time you have a multi-layer exr of one of your render and you would like to analyse the \"albedo\" AOV that it holds: (We skip some steps as they are explained above.) This time instead of createpgmap we are going to use querylayers that will allow us to display all the channels of all the subimages that your exr has. (in case you don't know how your aov is called) Just after the path to the .exe add the path to the render/image \"L:\\apps\\PointerGamutCLTool_v1.exe\" querylayers \"L:\\render\\randomRender.exr\" Hit enter and you will see all the channel for each subimage displayed. Depending on how you exr is made you can get two result. In both case just pick the name of the albedo aov like if you see \"albedoAov.G\", the name is \"albedoAov\". # Example with a render from Redshift (\"multi-layer\" exr) SubImage Index: 0 , Channels: ( 'R' , 'G' , 'B' , 'A' , 'Z' , 'DiffuseFilter.R' , 'DiffuseFilter.G' , 'DiffuseFilter.B' , 'Emission.R' , 'Emission.G' , 'Emission.B' , 'GIRaw.R' , 'GIRaw.G' , 'GIRaw.B' , 'SpecularLighting.R' , 'SpecularLighting.G' ) # Example of the 2nd type of result you can get: (multi-part exr with multiple subimages) SubImage 0 , Channels: ( 'R' , 'G' , 'B' , 'A' ) SubImage 1 , Channels: ( 'depth.Z' , ) SubImage 2 , Channels: ( 'albedo.R' , 'albedo.G' , 'albedo.B' ) SubImage 3 , Channels: ( 'speculard.R' , 'speculard.G' , 'speculard.B' ) SubImage 4 , Channels: ( 'sss.R' , 'sss.G' , 'sss.B' ) So now you can pick the name of the layer you want to analyse (for the Pointer's Gamut we are only interested in the albedo AOV which is called DiffuseFilter by Redshift) Now we can do the same steps as the first part of the tutorial, let's add the createpgmap command , the input_file_path, the output_file_path and the colorspace . \"L:\\apps\\PointerGamutCLTool_v1.exe\" createpgmap \"L:\\render\\randomRender.exr\" \"L:\\render\\renderX_pgmap.jpg\" --colorspace = ACEScg The only difference is this time, add the --layername option with, as value, the name of your albedo aov that we pick before. (so for me it's DiffuseFilter) \"L:\\apps\\PointerGamutCLTool_v1.exe\" createpgmap \"L:\\render\\randomRender.exr\" \"L:\\render\\renderX_pgmap.jpg\" --colorspace = ACEScg --layername = DiffuseFilter Hit enter and you got your map Example of command: \u00b6 \"L:\\apps\\PointerGamutCLTool_v1.exe\" createpgmap \"L:\\render\\randomRender.exr\" \"L:\\render\\renderX_pgmap.jpg\" --colorspace = ACEScg --layername = Albedo \"./script/pointerGamutCLI.exe\" createpgmap \"L:\\megascans\\td3nedtla_4K_Albedo.jpg\" \"L:\\megascans\\CLI_apple_01.jpg\" --colorspace = sRGB --linearize --tolerance = 0 .1 --out_map_type = add","title":"Getting started"},{"location":"standalone/PointerGamutCLI/startguide/#start-guide","text":"Get the app Download the app here: https://gum.co/pgtool","title":" START GUIDE"},{"location":"standalone/PointerGamutCLI/startguide/#installation","text":"Just unzip the file you downloaded and put the folder anywhere you want. The .exe is in the folder, there is a lot of file inside but compared to if i just packed everything into .exe, the current solution is much faster to run.","title":" Installation"},{"location":"standalone/PointerGamutCLI/startguide/#tutorial-create-a-pointers-gamut-heat-map-for-an-image","text":"This application is Command Line based, it means if you try to just open the .exe, nothing will happens. You need to execute the app from a command prompt by calling commands. Open the Windows command prompt (win+r type cmd and hits enter) First you need to get the path to the .exe so go where you saved the app, shift+rightclick on it -> copy as path Go back in the command prompt, paste the path (shift+inser)(the path must start and end with \"\" ) \"L:\\apps\\PointerGamutCLTool_v1.exe\" Enter the command you want to use , in this case createpgmap \"L:\\apps\\PointerGamutCLTool_v1.exe\" createpgmap Get the path of the image you want to analyse, and paste it after the command (as always with a space in between) \"L:\\apps\\PointerGamutCLTool_v1.exe\" createpgmap \"L:\\texture\\randomTexture.exr\" Now enter the path of the output file (with also the name.ext) \"L:\\apps\\PointerGamutCLTool_v1.exe\" createpgmap \"L:\\texture\\randomTexture.exr\" \"L:\\texture\\texture_pgmap.jpg\" Enter the colorspace of the file --colorspace=sRGB (always with a space after the last argument wrote) Info This argument should specify the colorspace of your file. Examples of colorspaces available: ACEScg, sRGB, BT709, ADOBE_WIDE_GAMUT, ADOBE_RGB_1998, ACES_2065_1 If your file is not linear add --linearize that will linearize your file based on the colorspace specified. Please refer to the features page where this option is explained in detail. You can just assume: use this option for jpg/png/... , don't use it for .exr/... You can precise the tolerance amount you want by adding --tolerance=yourNumber which is by default 0. The range of this parameters is 0-1, but keep it very low. Something like is 0.08 is a good value if you want some margin.","title":" Tutorial: create a Pointer's Gamut heat map for an image"},{"location":"standalone/PointerGamutCLI/startguide/#tutorial-create-a-pointers-gamut-heat-map-from-a-multi-layerpart-exr","text":"Let's say that this time you have a multi-layer exr of one of your render and you would like to analyse the \"albedo\" AOV that it holds: (We skip some steps as they are explained above.) This time instead of createpgmap we are going to use querylayers that will allow us to display all the channels of all the subimages that your exr has. (in case you don't know how your aov is called) Just after the path to the .exe add the path to the render/image \"L:\\apps\\PointerGamutCLTool_v1.exe\" querylayers \"L:\\render\\randomRender.exr\" Hit enter and you will see all the channel for each subimage displayed. Depending on how you exr is made you can get two result. In both case just pick the name of the albedo aov like if you see \"albedoAov.G\", the name is \"albedoAov\". # Example with a render from Redshift (\"multi-layer\" exr) SubImage Index: 0 , Channels: ( 'R' , 'G' , 'B' , 'A' , 'Z' , 'DiffuseFilter.R' , 'DiffuseFilter.G' , 'DiffuseFilter.B' , 'Emission.R' , 'Emission.G' , 'Emission.B' , 'GIRaw.R' , 'GIRaw.G' , 'GIRaw.B' , 'SpecularLighting.R' , 'SpecularLighting.G' ) # Example of the 2nd type of result you can get: (multi-part exr with multiple subimages) SubImage 0 , Channels: ( 'R' , 'G' , 'B' , 'A' ) SubImage 1 , Channels: ( 'depth.Z' , ) SubImage 2 , Channels: ( 'albedo.R' , 'albedo.G' , 'albedo.B' ) SubImage 3 , Channels: ( 'speculard.R' , 'speculard.G' , 'speculard.B' ) SubImage 4 , Channels: ( 'sss.R' , 'sss.G' , 'sss.B' ) So now you can pick the name of the layer you want to analyse (for the Pointer's Gamut we are only interested in the albedo AOV which is called DiffuseFilter by Redshift) Now we can do the same steps as the first part of the tutorial, let's add the createpgmap command , the input_file_path, the output_file_path and the colorspace . \"L:\\apps\\PointerGamutCLTool_v1.exe\" createpgmap \"L:\\render\\randomRender.exr\" \"L:\\render\\renderX_pgmap.jpg\" --colorspace = ACEScg The only difference is this time, add the --layername option with, as value, the name of your albedo aov that we pick before. (so for me it's DiffuseFilter) \"L:\\apps\\PointerGamutCLTool_v1.exe\" createpgmap \"L:\\render\\randomRender.exr\" \"L:\\render\\renderX_pgmap.jpg\" --colorspace = ACEScg --layername = DiffuseFilter Hit enter and you got your map","title":" Tutorial: create a Pointer's Gamut heat map from a multi-layer/part exr"},{"location":"standalone/PointerGamutCLI/startguide/#example-of-command","text":"\"L:\\apps\\PointerGamutCLTool_v1.exe\" createpgmap \"L:\\render\\randomRender.exr\" \"L:\\render\\renderX_pgmap.jpg\" --colorspace = ACEScg --layername = Albedo \"./script/pointerGamutCLI.exe\" createpgmap \"L:\\megascans\\td3nedtla_4K_Albedo.jpg\" \"L:\\megascans\\CLI_apple_01.jpg\" --colorspace = sRGB --linearize --tolerance = 0 .1 --out_map_type = add","title":"Example of command:"}]}